{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry\\packages\\aldeed:autoform\\templates\\bootstrap3-inline\\bootstrap3-inline.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/aldeed:autoform/templates/bootstrap3-inline/bootstrap3-inline.js","filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry\\packages\\aldeed:autoform\\templates\\bootstrap3-inline\\bootstrap3-inline.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry","root":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry","generatorOpts":{"filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry\\packages\\aldeed:autoform\\templates\\bootstrap3-inline\\bootstrap3-inline.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/aldeed:autoform/templates/bootstrap3-inline/bootstrap3-inline.js"}},"code":"/* global AutoForm */\nTemplate['quickForm_bootstrap3-inline'].helpers({\n  submitButtonAtts: function () {\n    var qfAtts = this.atts;\n    var atts = {};\n\n    if (typeof qfAtts.buttonClasses === 'string') {\n      atts['class'] = qfAtts.buttonClasses;\n    } else {\n      atts['class'] = 'btn btn-primary autoform-inline-align';\n    }\n\n    return atts;\n  },\n  qfAutoFormContext: function () {\n    var ctx = _.clone(this.qfAutoFormContext || {});\n\n    ctx = AutoForm.Utility.addClass(ctx, 'form-inline'); // label-class attribute is unique to this template so it will\n    // not have been removed by AutoForm core. We remove it from the autoForm context\n    // because it is an attribute supported only by quickFields, quickField,\n    // afObjectField, afArrayField, and afFormGroup.\n\n    delete ctx['label-class'];\n    return ctx;\n  },\n  quickFieldsAtts: function () {\n    // These are the quickForm attributes that we want to forward to\n    // the afQuickFields component.\n    return _.pick(this.atts, 'id-prefix', 'label-class');\n  }\n});\nTemplate['afFormGroup_bootstrap3-inline'].helpers({\n  afFieldInputAtts: function () {\n    var atts = _.clone(this.afFieldInputAtts || {}); // Use the same templates as those defined for bootstrap3 template.\n\n\n    atts.template = 'bootstrap3';\n    return atts;\n  }\n});","map":{"version":3,"sources":["packages/aldeed:autoform/templates/bootstrap3-inline/bootstrap3-inline.js"],"names":["Template","helpers","submitButtonAtts","qfAtts","atts","buttonClasses","qfAutoFormContext","ctx","_","clone","AutoForm","Utility","addClass","quickFieldsAtts","pick","afFieldInputAtts","template"],"mappings":"AAAA;AAEAA,SAAS,6BAAT,EAAwCC,OAAxC,CAAgD;AAC9CC,oBAAkB,YAAY;AAC5B,QAAIC,SAAS,KAAKC,IAAlB;AACA,QAAIA,OAAO,EAAX;;AACA,QAAI,OAAOD,OAAOE,aAAd,KAAgC,QAApC,EAA8C;AAC5CD,WAAK,OAAL,IAAgBD,OAAOE,aAAvB;AACD,KAFD,MAEO;AACLD,WAAK,OAAL,IAAgB,uCAAhB;AACD;;AACD,WAAOA,IAAP;AACD,GAV6C;AAW9CE,qBAAmB,YAAY;AAC7B,QAAIC,MAAMC,EAAEC,KAAF,CAAQ,KAAKH,iBAAL,IAA0B,EAAlC,CAAV;;AACAC,UAAMG,SAASC,OAAT,CAAiBC,QAAjB,CAA0BL,GAA1B,EAA+B,aAA/B,CAAN,CAF6B,CAI7B;AACA;AACA;AACA;;AACA,WAAOA,IAAI,aAAJ,CAAP;AAEA,WAAOA,GAAP;AACD,GAtB6C;AAuB9CM,mBAAiB,YAAY;AAC3B;AACA;AACA,WAAOL,EAAEM,IAAF,CAAO,KAAKV,IAAZ,EAAkB,WAAlB,EAA+B,aAA/B,CAAP;AACD;AA3B6C,CAAhD;AA8BAJ,SAAS,+BAAT,EAA0CC,OAA1C,CAAkD;AAChDc,oBAAkB,YAAY;AAC5B,QAAIX,OAAOI,EAAEC,KAAF,CAAQ,KAAKM,gBAAL,IAAyB,EAAjC,CAAX,CAD4B,CAE5B;;;AACAX,SAAKY,QAAL,GAAgB,YAAhB;AACA,WAAOZ,IAAP;AACD;AAN+C,CAAlD","sourcesContent":["/* global AutoForm */\n\nTemplate['quickForm_bootstrap3-inline'].helpers({\n  submitButtonAtts: function () {\n    var qfAtts = this.atts;\n    var atts = {};\n    if (typeof qfAtts.buttonClasses === 'string') {\n      atts['class'] = qfAtts.buttonClasses;\n    } else {\n      atts['class'] = 'btn btn-primary autoform-inline-align';\n    }\n    return atts;\n  },\n  qfAutoFormContext: function () {\n    var ctx = _.clone(this.qfAutoFormContext || {});\n    ctx = AutoForm.Utility.addClass(ctx, 'form-inline');\n\n    // label-class attribute is unique to this template so it will\n    // not have been removed by AutoForm core. We remove it from the autoForm context\n    // because it is an attribute supported only by quickFields, quickField,\n    // afObjectField, afArrayField, and afFormGroup.\n    delete ctx['label-class'];\n\n    return ctx;\n  },\n  quickFieldsAtts: function () {\n    // These are the quickForm attributes that we want to forward to\n    // the afQuickFields component.\n    return _.pick(this.atts, 'id-prefix', 'label-class');\n  }\n});\n\nTemplate['afFormGroup_bootstrap3-inline'].helpers({\n  afFieldInputAtts: function () {\n    var atts = _.clone(this.afFieldInputAtts || {});\n    // Use the same templates as those defined for bootstrap3 template.\n    atts.template = 'bootstrap3';\n    return atts;\n  }\n});\n"]},"sourceType":"script","hash":"9e4c572657475a3d5bbbfda607e6d9c5b2a5745a"}
