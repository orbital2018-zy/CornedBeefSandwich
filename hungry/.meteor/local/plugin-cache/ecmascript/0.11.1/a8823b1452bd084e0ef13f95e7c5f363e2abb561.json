{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\aldeed:autoform\\components\\afQuickField\\afQuickField.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/aldeed:autoform/components/afQuickField/afQuickField.js","filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\aldeed:autoform\\components\\afQuickField\\afQuickField.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","root":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","generatorOpts":{"filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\aldeed:autoform\\components\\afQuickField\\afQuickField.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/aldeed:autoform/components/afQuickField/afQuickField.js"}},"code":"/* global AutoForm */\nTemplate.afQuickField.helpers({\n  isGroup: function afQuickFieldIsGroup() {\n    var c = AutoForm.Utility.getComponentContext(this, \"afQuickField\"); // Render a group of fields if we expect an Object and we don't have options\n    // and we have not overridden the type\n\n    const isSubschema = typeof c.defs.type === 'object' && c.defs.type._schema;\n    return (c.defs.type === Object || isSubschema) && !c.atts.options && !c.atts.type;\n  },\n  isFieldArray: function afQuickFieldIsFieldArray() {\n    var c = AutoForm.Utility.getComponentContext(this, \"afQuickField\"); // Render an array of fields if we expect an Array and we don't have options\n    // and we have not overridden the type\n\n    return c.defs.type === Array && !c.atts.options && !c.atts.type;\n  },\n  groupAtts: function afQuickFieldGroupAtts() {\n    // afQuickField passes `fields` and `omitFields` on to `afObjectField`\n    // and `afArrayField`, but not to `afFormGroup`\n    return _.omit(this, 'fields', 'omitFields');\n  },\n  isHiddenInput: function afQuickFieldIsHiddenInput() {\n    var c = AutoForm.Utility.getComponentContext(this, \"afQuickField\");\n    var inputType = c.atts.type;\n\n    if (inputType) {\n      var componentDef = AutoForm._inputTypeDefinitions[inputType];\n\n      if (!componentDef) {\n        throw new Error('AutoForm: No component found for rendering input with type \"' + inputType + '\"');\n      }\n\n      return componentDef.isHidden;\n    }\n\n    return false;\n  }\n});","map":{"version":3,"sources":["packages/aldeed:autoform/components/afQuickField/afQuickField.js"],"names":["Template","afQuickField","helpers","isGroup","afQuickFieldIsGroup","c","AutoForm","Utility","getComponentContext","isSubschema","defs","type","_schema","Object","atts","options","isFieldArray","afQuickFieldIsFieldArray","Array","groupAtts","afQuickFieldGroupAtts","_","omit","isHiddenInput","afQuickFieldIsHiddenInput","inputType","componentDef","_inputTypeDefinitions","Error","isHidden"],"mappings":"AAAA;AAEAA,SAASC,YAAT,CAAsBC,OAAtB,CAA8B;AAC5BC,WAAS,SAASC,mBAAT,GAA+B;AACtC,QAAIC,IAAIC,SAASC,OAAT,CAAiBC,mBAAjB,CAAqC,IAArC,EAA2C,cAA3C,CAAR,CADsC,CAEtC;AACA;;AACA,UAAMC,cAAc,OAAOJ,EAAEK,IAAF,CAAOC,IAAd,KAAuB,QAAvB,IAAmCN,EAAEK,IAAF,CAAOC,IAAP,CAAYC,OAAnE;AACA,WAAQ,CAACP,EAAEK,IAAF,CAAOC,IAAP,KAAgBE,MAAhB,IAA0BJ,WAA3B,KAA2C,CAACJ,EAAES,IAAF,CAAOC,OAAnD,IAA8D,CAACV,EAAES,IAAF,CAAOH,IAA9E;AACD,GAP2B;AAQ5BK,gBAAc,SAASC,wBAAT,GAAoC;AAChD,QAAIZ,IAAIC,SAASC,OAAT,CAAiBC,mBAAjB,CAAqC,IAArC,EAA2C,cAA3C,CAAR,CADgD,CAEhD;AACA;;AACA,WAAQH,EAAEK,IAAF,CAAOC,IAAP,KAAgBO,KAAhB,IAAyB,CAACb,EAAES,IAAF,CAAOC,OAAjC,IAA4C,CAACV,EAAES,IAAF,CAAOH,IAA5D;AACD,GAb2B;AAc5BQ,aAAW,SAASC,qBAAT,GAAiC;AAC1C;AACA;AACA,WAAOC,EAAEC,IAAF,CAAO,IAAP,EAAa,QAAb,EAAuB,YAAvB,CAAP;AACD,GAlB2B;AAmB5BC,iBAAe,SAASC,yBAAT,GAAqC;AAClD,QAAInB,IAAIC,SAASC,OAAT,CAAiBC,mBAAjB,CAAqC,IAArC,EAA2C,cAA3C,CAAR;AACA,QAAIiB,YAAYpB,EAAES,IAAF,CAAOH,IAAvB;;AACA,QAAIc,SAAJ,EAAe;AACb,UAAIC,eAAepB,SAASqB,qBAAT,CAA+BF,SAA/B,CAAnB;;AACA,UAAI,CAACC,YAAL,EAAmB;AACjB,cAAM,IAAIE,KAAJ,CAAU,iEAAiEH,SAAjE,GAA6E,GAAvF,CAAN;AACD;;AACD,aAAOC,aAAaG,QAApB;AACD;;AAED,WAAO,KAAP;AACD;AA/B2B,CAA9B","sourcesContent":["/* global AutoForm */\n\nTemplate.afQuickField.helpers({\n  isGroup: function afQuickFieldIsGroup() {\n    var c = AutoForm.Utility.getComponentContext(this, \"afQuickField\");\n    // Render a group of fields if we expect an Object and we don't have options\n    // and we have not overridden the type\n    const isSubschema = typeof c.defs.type === 'object' && c.defs.type._schema;\n    return ((c.defs.type === Object || isSubschema) && !c.atts.options && !c.atts.type);\n  },\n  isFieldArray: function afQuickFieldIsFieldArray() {\n    var c = AutoForm.Utility.getComponentContext(this, \"afQuickField\");\n    // Render an array of fields if we expect an Array and we don't have options\n    // and we have not overridden the type\n    return (c.defs.type === Array && !c.atts.options && !c.atts.type);\n  },\n  groupAtts: function afQuickFieldGroupAtts() {\n    // afQuickField passes `fields` and `omitFields` on to `afObjectField`\n    // and `afArrayField`, but not to `afFormGroup`\n    return _.omit(this, 'fields', 'omitFields');\n  },\n  isHiddenInput: function afQuickFieldIsHiddenInput() {\n    var c = AutoForm.Utility.getComponentContext(this, \"afQuickField\");\n    var inputType = c.atts.type;\n    if (inputType) {\n      var componentDef = AutoForm._inputTypeDefinitions[inputType];\n      if (!componentDef) {\n        throw new Error('AutoForm: No component found for rendering input with type \"' + inputType + '\"');\n      }\n      return componentDef.isHidden;\n    }\n\n    return false;\n  }\n});\n"]},"sourceType":"script","hash":"a8823b1452bd084e0ef13f95e7c5f363e2abb561"}
