{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\easysearch:core\\lib\\engines\\mongo-db.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/easysearch:core/lib/engines/mongo-db.js","filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\easysearch:core\\lib\\engines\\mongo-db.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","root":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","presets":[],"generatorOpts":{"filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\easysearch:core\\lib\\engines\\mongo-db.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/easysearch:core/lib/engines/mongo-db.js"}},"code":"let Cursor;\nmodule.watch(require(\"../core/cursor\"), {\n  default(v) {\n    Cursor = v;\n  }\n\n}, 0);\nlet ReactiveEngine;\nmodule.watch(require(\"../core/reactive-engine\"), {\n  default(v) {\n    ReactiveEngine = v;\n  }\n\n}, 1);\n\n/**\n * The MongoDBEngine lets you search the index on the server side with MongoDB. Subscriptions and publications\n * are handled within the Engine.\n *\n * @type {MongoDBEngine}\n */\nclass MongoDBEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), super.defaultConfiguration());\n  }\n  /**\n   * Default mongo configuration, used in constructor and MinimongoEngine to get the configuration.\n   *\n   * @param {Object} engineScope Scope of the engine\n   *\n   * @returns {Object}\n   */\n\n\n  static defaultMongoConfiguration(engineScope) {\n    return {\n      aggregation: '$or',\n\n      selector(searchObject, options, aggregation) {\n        const selector = {};\n        selector[aggregation] = [];\n\n        _.each(searchObject, (searchString, field) => {\n          const fieldSelector = engineScope.callConfigMethod('selectorPerField', field, searchString, options);\n\n          if (fieldSelector) {\n            selector[aggregation].push(fieldSelector);\n          }\n        });\n\n        return selector;\n      },\n\n      selectorPerField(field, searchString) {\n        const selector = {};\n        searchString = searchString.replace(/(\\W{1})/g, '\\\\$1');\n        selector[field] = {\n          '$regex': `.*${searchString}.*`,\n          '$options': 'i'\n        };\n        return selector;\n      },\n\n      sort(searchObject, options) {\n        return options.index.fields;\n      }\n\n    };\n  }\n  /**\n   * Return the find options for the mongo find query.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n\n\n  getFindOptions(searchDefinition, options) {\n    return {\n      skip: options.search.skip,\n      limit: options.search.limit,\n      disableOplog: this.config.disableOplog,\n      pollingIntervalMs: this.config.pollingIntervalMs,\n      pollingThrottleMs: this.config.pollingThrottleMs,\n      sort: this.callConfigMethod('sort', searchDefinition, options),\n      fields: this.callConfigMethod('fields', searchDefinition, options)\n    };\n  }\n  /**\n   * Return the reactive search cursor.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n\n\n  getSearchCursor(searchDefinition, options) {\n    const selector = this.callConfigMethod('selector', searchDefinition, options, this.config.aggregation),\n          findOptions = this.getFindOptions(searchDefinition, options),\n          collection = options.index.collection;\n    check(options, Object);\n    check(selector, Object);\n    check(findOptions, Object);\n    return new Cursor(collection.find(selector, findOptions), collection.find(selector).count());\n  }\n\n}\n\nmodule.exportDefault(MongoDBEngine);","map":{"version":3,"sources":["packages/easysearch:core/lib/engines/mongo-db.js"],"names":["Cursor","module","watch","require","default","v","ReactiveEngine","MongoDBEngine","defaultConfiguration","_","defaults","defaultMongoConfiguration","engineScope","aggregation","selector","searchObject","options","each","searchString","field","fieldSelector","callConfigMethod","push","selectorPerField","replace","sort","index","fields","getFindOptions","searchDefinition","skip","search","limit","disableOplog","config","pollingIntervalMs","pollingThrottleMs","getSearchCursor","findOptions","collection","check","Object","find","count","exportDefault"],"mappings":"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","sourcesContent":["import Cursor from '../core/cursor';\nimport ReactiveEngine from '../core/reactive-engine';\n\n/**\n * The MongoDBEngine lets you search the index on the server side with MongoDB. Subscriptions and publications\n * are handled within the Engine.\n *\n * @type {MongoDBEngine}\n */\nclass MongoDBEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), super.defaultConfiguration());\n  }\n\n  /**\n   * Default mongo configuration, used in constructor and MinimongoEngine to get the configuration.\n   *\n   * @param {Object} engineScope Scope of the engine\n   *\n   * @returns {Object}\n   */\n  static defaultMongoConfiguration(engineScope) {\n    return {\n      aggregation: '$or',\n      selector(searchObject, options, aggregation) {\n        const selector = {};\n\n        selector[aggregation] = [];\n\n        _.each(searchObject, (searchString, field) => {\n          const fieldSelector = engineScope.callConfigMethod(\n            'selectorPerField', field, searchString, options\n          );\n\n          if (fieldSelector) {\n            selector[aggregation].push(fieldSelector);\n          }\n        });\n\n        return selector;\n      },\n      selectorPerField(field, searchString) {\n        const selector = {};\n\n        searchString = searchString.replace(/(\\W{1})/g, '\\\\$1');\n        selector[field] = { '$regex' : `.*${searchString}.*`, '$options' : 'i'};\n\n        return selector;\n      },\n      sort(searchObject, options) {\n        return options.index.fields;\n      }\n    };\n  }\n\n  /**\n   * Return the find options for the mongo find query.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getFindOptions(searchDefinition, options) {\n    return {\n      skip: options.search.skip,\n      limit: options.search.limit,\n      disableOplog: this.config.disableOplog,\n      pollingIntervalMs: this.config.pollingIntervalMs,\n      pollingThrottleMs: this.config.pollingThrottleMs,\n      sort: this.callConfigMethod('sort', searchDefinition, options),\n      fields: this.callConfigMethod('fields', searchDefinition, options)\n    };\n  }\n\n  /**\n   * Return the reactive search cursor.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getSearchCursor(searchDefinition, options) {\n    const selector = this.callConfigMethod(\n        'selector',\n        searchDefinition,\n        options,\n        this.config.aggregation\n      ),\n      findOptions = this.getFindOptions(searchDefinition, options),\n      collection = options.index.collection;\n\n    check(options, Object);\n    check(selector, Object);\n    check(findOptions, Object);\n\n    return new Cursor(\n      collection.find(selector, findOptions),\n      collection.find(selector).count()\n    );\n  }\n}\n\nexport default MongoDBEngine;\n"]},"sourceType":"script","hash":"7fa16425c08a7eccb9a21056bcc2e2f233759953"}
