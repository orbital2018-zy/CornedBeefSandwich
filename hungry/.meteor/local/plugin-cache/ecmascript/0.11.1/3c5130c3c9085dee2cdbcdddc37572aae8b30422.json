{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry\\packages\\easysearch:components\\lib\\core.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/easysearch:components/lib/core.js","filename":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry\\packages\\easysearch:components\\lib\\core.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry","root":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry","presets":[],"generatorOpts":{"filename":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry\\packages\\easysearch:components\\lib\\core.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/easysearch:components/lib/core.js"}},"code":"/**\n * Extend EasySearch.Index with component functionality.\n *\n * @type {Index}\n */\nEasySearch.Index = class Index extends EasySearch.Index {\n  /**\n   * Constructor.\n   */\n  constructor() {\n    super(...arguments);\n    this.components = {};\n  }\n  /**\n   * Return static default name for components.\n   *\n   * @returns {String}\n   */\n\n\n  static get COMPONENT_DEFAULT_NAME() {\n    return '__default';\n  }\n  /**\n   * Register a component on the index.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n\n\n  registerComponent(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    this.components[componentName] = new ReactiveDict(`easySearchComponent_${this.config.name}_${componentName}_${Random.id()}`);\n  }\n  /**\n   * Get the reactive dictionary for a component.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n\n\n  getComponentDict(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    return this.components[componentName];\n  }\n  /**\n   * Get component methods that are useful for implementing search behaviour.\n   *\n   * @param componentName\n   */\n\n\n  getComponentMethods(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    let dict = this.getComponentDict(componentName);\n\n    if (!dict) {\n      throw new Meteor.Error('no-component', `Component with name '${componentName}' not found`);\n    }\n\n    return EasySearch._getComponentMethods(dict, this);\n  }\n\n};\n/**\n * Return true if the current page is valid.\n *\n * @param {Number} totalPagesLength Count of all pages available\n * @param {Number} currentPage      Current page to check\n *\n * @returns {boolean}\n */\n\nfunction isValidPage(totalPagesLength, currentPage) {\n  return currentPage <= totalPagesLength && currentPage > 0;\n}\n/**\n * Helper method to get the pages for pagination as an array.\n *\n * @param totalCount   Total count of results\n * @param pageCount    Count of results per page\n * @param currentPage  Current page\n * @param prevAndNext  True if Next and Previous buttons should appear\n * @param maxPages     Maximum count of pages to show\n *\n * @private\n *\n * @returns {Array}\n */\n\n\nEasySearch._getPagesForPagination = function ({\n  totalCount,\n  pageCount,\n  currentPage,\n  prevAndNext,\n  maxPages\n}) {\n  let pages = _.range(1, Math.ceil(totalCount / pageCount) + 1),\n      pagesLength = pages.length;\n\n  if (!isValidPage(pagesLength, currentPage)) {\n    throw new Meteor.Error('invalid-page', 'Current page is not in valid range');\n  }\n\n  if (maxPages) {\n    let startSlice = currentPage > maxPages / 2 ? currentPage - 1 - Math.floor(maxPages / 2) : 0,\n        endSlice = startSlice + maxPages;\n\n    if (endSlice > pagesLength) {\n      pages = pages.slice(-maxPages);\n    } else {\n      pages = pages.slice(startSlice, startSlice + maxPages);\n    }\n  }\n\n  let pageData = _.map(pages, function (page) {\n    let isCurrentPage = page === currentPage;\n    return {\n      page,\n      content: page.toString(),\n      current: isCurrentPage,\n      disabled: isCurrentPage\n    };\n  });\n\n  if (prevAndNext) {\n    // Previous\n    let prevPage = isValidPage(pagesLength, currentPage - 1) ? currentPage - 1 : null;\n    pageData.unshift({\n      page: prevPage,\n      content: 'Prev',\n      current: false,\n      disabled: 1 === currentPage\n    }); // Next\n\n    let nextPage = isValidPage(pagesLength, currentPage + 1) ? currentPage + 1 : null;\n    pageData.push({\n      page: nextPage,\n      content: 'Next',\n      current: false,\n      disabled: null == nextPage || pagesLength + 1 === currentPage\n    });\n  }\n\n  return pageData;\n};","map":{"version":3,"sources":["packages/easysearch:components/lib/core.js"],"names":["EasySearch","Index","constructor","arguments","components","COMPONENT_DEFAULT_NAME","registerComponent","componentName","ReactiveDict","config","name","Random","id","getComponentDict","getComponentMethods","dict","Meteor","Error","_getComponentMethods","isValidPage","totalPagesLength","currentPage","_getPagesForPagination","totalCount","pageCount","prevAndNext","maxPages","pages","_","range","Math","ceil","pagesLength","length","startSlice","floor","endSlice","slice","pageData","map","page","isCurrentPage","content","toString","current","disabled","prevPage","unshift","nextPage","push"],"mappings":"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","sourcesContent":["/**\n * Extend EasySearch.Index with component functionality.\n *\n * @type {Index}\n */\nEasySearch.Index = class Index extends EasySearch.Index {\n  /**\n   * Constructor.\n   */\n  constructor() {\n    super(...arguments);\n    this.components = {};\n  }\n\n  /**\n   * Return static default name for components.\n   *\n   * @returns {String}\n   */\n  static get COMPONENT_DEFAULT_NAME() {\n    return'__default';\n  }\n\n  /**\n   * Register a component on the index.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n  registerComponent(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    this.components[componentName] = new ReactiveDict(\n      `easySearchComponent_${this.config.name}_${componentName}_${Random.id()}`\n    );\n  }\n\n  /**\n   * Get the reactive dictionary for a component.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n  getComponentDict(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    return this.components[componentName];\n  }\n\n  /**\n   * Get component methods that are useful for implementing search behaviour.\n   *\n   * @param componentName\n   */\n  getComponentMethods(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    let dict = this.getComponentDict(componentName);\n\n    if (!dict) {\n      throw new Meteor.Error('no-component', `Component with name '${componentName}' not found`);\n    }\n\n    return EasySearch._getComponentMethods(dict, this);\n  }\n};\n\n/**\n * Return true if the current page is valid.\n *\n * @param {Number} totalPagesLength Count of all pages available\n * @param {Number} currentPage      Current page to check\n *\n * @returns {boolean}\n */\nfunction isValidPage(totalPagesLength, currentPage) {\n  return currentPage <= totalPagesLength && currentPage > 0;\n}\n\n/**\n * Helper method to get the pages for pagination as an array.\n *\n * @param totalCount   Total count of results\n * @param pageCount    Count of results per page\n * @param currentPage  Current page\n * @param prevAndNext  True if Next and Previous buttons should appear\n * @param maxPages     Maximum count of pages to show\n *\n * @private\n *\n * @returns {Array}\n */\nEasySearch._getPagesForPagination = function ({totalCount, pageCount, currentPage, prevAndNext, maxPages}) {\n  let pages = _.range(1, Math.ceil(totalCount / pageCount) + 1),\n    pagesLength = pages.length;\n\n  if (!isValidPage(pagesLength, currentPage)) {\n    throw new Meteor.Error('invalid-page', 'Current page is not in valid range');\n  }\n\n  if (maxPages) {\n    let startSlice = (currentPage > (maxPages / 2) ? (currentPage - 1) - Math.floor(maxPages / 2) : 0),\n      endSlice = startSlice + maxPages;\n\n    if (endSlice > pagesLength) {\n      pages = pages.slice(-maxPages);\n    } else {\n      pages = pages.slice(startSlice, startSlice + maxPages);\n    }\n  }\n\n  let pageData = _.map(pages, function (page) {\n    let isCurrentPage = page === currentPage;\n    return { page, content: page.toString(), current: isCurrentPage, disabled: isCurrentPage };\n  });\n\n  if (prevAndNext) {\n    // Previous\n    let prevPage = isValidPage(pagesLength, currentPage - 1) ? currentPage - 1 : null;\n    pageData.unshift({ page: prevPage, content: 'Prev', current: false, disabled: 1 === currentPage });\n    // Next\n    let nextPage = isValidPage(pagesLength, currentPage + 1) ? currentPage + 1 : null;\n    pageData.push(\n      { page: nextPage, content: 'Next', current: false, disabled: null == nextPage || pagesLength + 1 === currentPage }\n    );\n  }\n\n  return pageData;\n};\n"]},"sourceType":"script","hash":"3c5130c3c9085dee2cdbcdddc37572aae8b30422"}
