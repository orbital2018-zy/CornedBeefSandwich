{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\aldeed:autoform\\inputTypes\\select\\select.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/aldeed:autoform/inputTypes/select/select.js","filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\aldeed:autoform\\inputTypes\\select\\select.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","root":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","generatorOpts":{"filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\aldeed:autoform\\inputTypes\\select\\select.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/aldeed:autoform/inputTypes/select/select.js"}},"code":"AutoForm.addInputType(\"select\", {\n  template: \"afSelect\",\n  valueOut: function () {\n    return this.val();\n  },\n  valueConverters: {\n    \"stringArray\": AutoForm.valueConverters.stringToStringArray,\n    \"number\": AutoForm.valueConverters.stringToNumber,\n    \"numberArray\": AutoForm.valueConverters.stringToNumberArray,\n    \"boolean\": AutoForm.valueConverters.stringToBoolean,\n    \"booleanArray\": AutoForm.valueConverters.stringToBooleanArray,\n    \"date\": AutoForm.valueConverters.stringToDate,\n    \"dateArray\": AutoForm.valueConverters.stringToDateArray\n  },\n  contextAdjust: function (context) {\n    //can fix issues with some browsers selecting the firstOption instead of the selected option\n    context.atts.autocomplete = \"off\";\n\n    var itemAtts = _.omit(context.atts, 'firstOption');\n\n    var firstOption = context.atts.firstOption; // build items list\n\n    context.items = []; // If a firstOption was provided, add that to the items list first\n\n    if (firstOption !== false) {\n      if (typeof firstOption === 'function') {\n        firstOption = firstOption();\n      }\n\n      context.items.push({\n        name: context.name,\n        label: typeof firstOption === \"string\" ? firstOption : \"(Select One)\",\n        value: \"\",\n        // _id must be included because it is a special property that\n        // #each uses to track unique list items when adding and removing them\n        // See https://github.com/meteor/meteor/issues/2174\n        //\n        // Setting this to an empty string caused problems if option with value\n        // 1 was in the options list because Spacebars evaluates \"\" to 1 and\n        // considers that a duplicate.\n        // See https://github.com/aldeed/meteor-autoform/issues/656\n        _id: \"AUTOFORM_EMPTY_FIRST_OPTION\",\n        selected: false,\n        atts: itemAtts\n      });\n    } // Add all defined options\n\n\n    _.each(context.selectOptions, function (opt) {\n      if (opt.optgroup) {\n        var subItems = _.map(opt.options, function (subOpt) {\n          return {\n            name: context.name,\n            label: subOpt.label,\n            value: subOpt.value,\n            htmlAtts: _.omit(subOpt, 'label', 'value'),\n            // _id must be included because it is a special property that\n            // #each uses to track unique list items when adding and removing them\n            // See https://github.com/meteor/meteor/issues/2174\n            //\n            // The toString() is necessary because otherwise Spacebars evaluates\n            // any string to 1 if the other values are numbers, and then considers\n            // that a duplicate.\n            // See https://github.com/aldeed/meteor-autoform/issues/656\n            _id: subOpt.value.toString(),\n            selected: subOpt.value === context.value,\n            atts: itemAtts\n          };\n        });\n\n        context.items.push({\n          optgroup: opt.optgroup,\n          items: subItems\n        });\n      } else {\n        context.items.push({\n          name: context.name,\n          label: opt.label,\n          value: opt.value,\n          htmlAtts: _.omit(opt, 'label', 'value'),\n          // _id must be included because it is a special property that\n          // #each uses to track unique list items when adding and removing them\n          // See https://github.com/meteor/meteor/issues/2174\n          //\n          // The toString() is necessary because otherwise Spacebars evaluates\n          // any string to 1 if the other values are numbers, and then considers\n          // that a duplicate.\n          // See https://github.com/aldeed/meteor-autoform/issues/656\n          _id: opt.value.toString(),\n          selected: opt.value === context.value,\n          atts: itemAtts\n        });\n      }\n    });\n\n    return context;\n  }\n});","map":{"version":3,"sources":["packages/aldeed:autoform/inputTypes/select/select.js"],"names":["AutoForm","addInputType","template","valueOut","val","valueConverters","stringToStringArray","stringToNumber","stringToNumberArray","stringToBoolean","stringToBooleanArray","stringToDate","stringToDateArray","contextAdjust","context","atts","autocomplete","itemAtts","_","omit","firstOption","items","push","name","label","value","_id","selected","each","selectOptions","opt","optgroup","subItems","map","options","subOpt","htmlAtts","toString"],"mappings":"AAAAA,SAASC,YAAT,CAAsB,QAAtB,EAAgC;AAC9BC,YAAU,UADoB;AAE9BC,YAAU,YAAY;AACpB,WAAO,KAAKC,GAAL,EAAP;AACD,GAJ6B;AAK9BC,mBAAiB;AACf,mBAAeL,SAASK,eAAT,CAAyBC,mBADzB;AAEf,cAAUN,SAASK,eAAT,CAAyBE,cAFpB;AAGf,mBAAeP,SAASK,eAAT,CAAyBG,mBAHzB;AAIf,eAAWR,SAASK,eAAT,CAAyBI,eAJrB;AAKf,oBAAgBT,SAASK,eAAT,CAAyBK,oBAL1B;AAMf,YAAQV,SAASK,eAAT,CAAyBM,YANlB;AAOf,iBAAaX,SAASK,eAAT,CAAyBO;AAPvB,GALa;AAc9BC,iBAAe,UAAUC,OAAV,EAAmB;AAChC;AACAA,YAAQC,IAAR,CAAaC,YAAb,GAA4B,KAA5B;;AAEA,QAAIC,WAAWC,EAAEC,IAAF,CAAOL,QAAQC,IAAf,EAAqB,aAArB,CAAf;;AACA,QAAIK,cAAcN,QAAQC,IAAR,CAAaK,WAA/B,CALgC,CAOhC;;AACAN,YAAQO,KAAR,GAAgB,EAAhB,CARgC,CAUhC;;AACA,QAAID,gBAAgB,KAApB,EAA2B;AACzB,UAAI,OAAOA,WAAP,KAAuB,UAA3B,EAAsC;AACpCA,sBAAcA,aAAd;AACD;;AACDN,cAAQO,KAAR,CAAcC,IAAd,CAAmB;AACjBC,cAAMT,QAAQS,IADG;AAEjBC,eAAQ,OAAOJ,WAAP,KAAuB,QAAvB,GAAkCA,WAAlC,GAAgD,cAFvC;AAGjBK,eAAO,EAHU;AAIjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,aAAK,6BAZY;AAajBC,kBAAU,KAbO;AAcjBZ,cAAME;AAdW,OAAnB;AAgBD,KA/B+B,CAiChC;;;AACAC,MAAEU,IAAF,CAAOd,QAAQe,aAAf,EAA8B,UAASC,GAAT,EAAc;AAC1C,UAAIA,IAAIC,QAAR,EAAkB;AAChB,YAAIC,WAAWd,EAAEe,GAAF,CAAMH,IAAII,OAAV,EAAmB,UAASC,MAAT,EAAiB;AACjD,iBAAO;AACLZ,kBAAMT,QAAQS,IADT;AAELC,mBAAOW,OAAOX,KAFT;AAGLC,mBAAOU,OAAOV,KAHT;AAILW,sBAAUlB,EAAEC,IAAF,CAAOgB,MAAP,EAAe,OAAf,EAAwB,OAAxB,CAJL;AAKL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,iBAAKS,OAAOV,KAAP,CAAaY,QAAb,EAbA;AAcLV,sBAAWQ,OAAOV,KAAP,KAAiBX,QAAQW,KAd/B;AAeLV,kBAAME;AAfD,WAAP;AAiBD,SAlBc,CAAf;;AAmBAH,gBAAQO,KAAR,CAAcC,IAAd,CAAmB;AACjBS,oBAAUD,IAAIC,QADG;AAEjBV,iBAAOW;AAFU,SAAnB;AAID,OAxBD,MAwBO;AACLlB,gBAAQO,KAAR,CAAcC,IAAd,CAAmB;AACjBC,gBAAMT,QAAQS,IADG;AAEjBC,iBAAOM,IAAIN,KAFM;AAGjBC,iBAAOK,IAAIL,KAHM;AAIjBW,oBAAUlB,EAAEC,IAAF,CAAOW,GAAP,EAAY,OAAZ,EAAqB,OAArB,CAJO;AAKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,eAAKI,IAAIL,KAAJ,CAAUY,QAAV,EAbY;AAcjBV,oBAAWG,IAAIL,KAAJ,KAAcX,QAAQW,KAdhB;AAejBV,gBAAME;AAfW,SAAnB;AAiBD;AACF,KA5CD;;AA8CA,WAAOH,OAAP;AACD;AA/F6B,CAAhC","sourcesContent":["AutoForm.addInputType(\"select\", {\n  template: \"afSelect\",\n  valueOut: function () {\n    return this.val();\n  },\n  valueConverters: {\n    \"stringArray\": AutoForm.valueConverters.stringToStringArray,\n    \"number\": AutoForm.valueConverters.stringToNumber,\n    \"numberArray\": AutoForm.valueConverters.stringToNumberArray,\n    \"boolean\": AutoForm.valueConverters.stringToBoolean,\n    \"booleanArray\": AutoForm.valueConverters.stringToBooleanArray,\n    \"date\": AutoForm.valueConverters.stringToDate,\n    \"dateArray\": AutoForm.valueConverters.stringToDateArray\n  },\n  contextAdjust: function (context) {\n    //can fix issues with some browsers selecting the firstOption instead of the selected option\n    context.atts.autocomplete = \"off\";\n\n    var itemAtts = _.omit(context.atts, 'firstOption');\n    var firstOption = context.atts.firstOption;\n\n    // build items list\n    context.items = [];\n\n    // If a firstOption was provided, add that to the items list first\n    if (firstOption !== false) {\n      if (typeof firstOption === 'function'){\n        firstOption = firstOption();\n      }\n      context.items.push({\n        name: context.name,\n        label: (typeof firstOption === \"string\" ? firstOption : \"(Select One)\"),\n        value: \"\",\n        // _id must be included because it is a special property that\n        // #each uses to track unique list items when adding and removing them\n        // See https://github.com/meteor/meteor/issues/2174\n        //\n        // Setting this to an empty string caused problems if option with value\n        // 1 was in the options list because Spacebars evaluates \"\" to 1 and\n        // considers that a duplicate.\n        // See https://github.com/aldeed/meteor-autoform/issues/656\n        _id: \"AUTOFORM_EMPTY_FIRST_OPTION\",\n        selected: false,\n        atts: itemAtts\n      });\n    }\n\n    // Add all defined options\n    _.each(context.selectOptions, function(opt) {\n      if (opt.optgroup) {\n        var subItems = _.map(opt.options, function(subOpt) {\n          return {\n            name: context.name,\n            label: subOpt.label,\n            value: subOpt.value,\n            htmlAtts: _.omit(subOpt, 'label', 'value'),\n            // _id must be included because it is a special property that\n            // #each uses to track unique list items when adding and removing them\n            // See https://github.com/meteor/meteor/issues/2174\n            //\n            // The toString() is necessary because otherwise Spacebars evaluates\n            // any string to 1 if the other values are numbers, and then considers\n            // that a duplicate.\n            // See https://github.com/aldeed/meteor-autoform/issues/656\n            _id: subOpt.value.toString(),\n            selected: (subOpt.value === context.value),\n            atts: itemAtts\n          };\n        });\n        context.items.push({\n          optgroup: opt.optgroup,\n          items: subItems\n        });\n      } else {\n        context.items.push({\n          name: context.name,\n          label: opt.label,\n          value: opt.value,\n          htmlAtts: _.omit(opt, 'label', 'value'),\n          // _id must be included because it is a special property that\n          // #each uses to track unique list items when adding and removing them\n          // See https://github.com/meteor/meteor/issues/2174\n          //\n          // The toString() is necessary because otherwise Spacebars evaluates\n          // any string to 1 if the other values are numbers, and then considers\n          // that a duplicate.\n          // See https://github.com/aldeed/meteor-autoform/issues/656\n          _id: opt.value.toString(),\n          selected: (opt.value === context.value),\n          atts: itemAtts\n        });\n      }\n    });\n\n    return context;\n  }\n});\n"]},"sourceType":"script","hash":"a932d727db45736a4973745ad7d558e0a495af85"}
