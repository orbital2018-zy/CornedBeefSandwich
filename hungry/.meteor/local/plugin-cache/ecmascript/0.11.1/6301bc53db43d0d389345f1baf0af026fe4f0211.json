{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\easysearch:components\\lib\\component-methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/easysearch:components/lib/component-methods.js","filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\easysearch:components\\lib\\component-methods.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","root":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","generatorOpts":{"filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\easysearch:components\\lib\\component-methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/easysearch:components/lib/component-methods.js"}},"code":"EasySearch._getComponentMethods = function (dict, index) {\n  return {\n    /**\n     * Search a component for the given search string.\n     *\n     * @param {Object|String} searchDefinition Search definition\n     */\n    search: searchDefinition => {\n      dict.set('searchOptions', {\n        props: (dict.get('searchOptions') || {}).props\n      });\n      dict.set('searchDefinition', searchDefinition);\n      dict.set('stopPublication', true);\n    },\n\n    /**\n     * Return the EasySearch.Cursor for the current search.\n     *\n     * @returns {Cursor}\n     */\n    getCursor: () => {\n      const searchDefinition = dict.get('searchDefinition') || '',\n            options = dict.get('searchOptions') || {},\n            showDocuments = dict.get('showDocuments');\n      check(options, Match.Optional(Object));\n\n      if (false === showDocuments) {\n        dict.set('count', 0);\n        dict.set('searching', false);\n        dict.set('limit', 0);\n        dict.set('skip', 0);\n        dict.set('currentCount', 0);\n        dict.set('stopPublication', false);\n        return EasySearch.Cursor.emptyCursor;\n      }\n\n      const cursor = index.search(searchDefinition, options),\n            searchOptions = index._getSearchOptions(options);\n\n      dict.set('count', cursor.count());\n      dict.set('searching', !cursor.isReady());\n      dict.set('limit', searchOptions.limit);\n      dict.set('skip', searchOptions.skip);\n      dict.set('currentCount', cursor.mongoCursor.count());\n      dict.set('stopPublication', false);\n      return cursor;\n    },\n\n    /**\n     * Return true if the current search string is empty.\n     *\n     * @returns {boolean}\n     */\n    searchIsEmpty: () => {\n      let searchDefinition = dict.get('searchDefinition');\n      return !searchDefinition || _.isString(searchDefinition) && 0 === searchDefinition.trim().length;\n    },\n\n    /**\n     * Return true if the component has no results.\n     *\n     * @returns {boolean}\n     */\n    hasNoResults: () => {\n      let count = dict.get('count'),\n          showDocuments = dict.get('showDocuments');\n      return false !== showDocuments && !dict.get('searching') && (!_.isNumber(count) || 0 === count);\n    },\n\n    /**\n     * Return true if the component is being searched.\n     *\n     * @returns {boolean}\n     */\n    isSearching: () => {\n      return !!dict.get('searching');\n    },\n\n    /**\n     * Return true if the component has more documents than displayed right now.\n     *\n     * @returns {boolean}\n     */\n    hasMoreDocuments: () => {\n      return dict.get('currentCount') < dict.get('count');\n    },\n\n    /**\n     * Load more documents for the component.\n     *\n     * @param {Number} count Count of docs\n     */\n    loadMore: count => {\n      check(count, Number);\n      let currentCount = dict.get('currentCount'),\n          options = dict.get('searchOptions') || {};\n      options.limit = currentCount + count;\n      dict.set('searchOptions', options);\n    },\n\n    /**\n     * Paginate through documents for the given page.\n     *\n     * @param {Number} page Page number\n     */\n    paginate: page => {\n      check(page, Number);\n      let options = dict.get('searchOptions') || {},\n          limit = dict.get('limit');\n      options.skip = limit * (page - 1);\n      dict.set('currentPage', page);\n      dict.set('searchOptions', options);\n      dict.set('stopPublication', true);\n    },\n\n    /**\n     * Add custom properties for search.\n     */\n    addProps() {\n      let options = dict.get('searchOptions') || {};\n      options.props = options.props || {};\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (_.isObject(args[0])) {\n        options.props = _.extend(options.props, args[0]);\n      } else if (_.isString(args[0])) {\n        options.props[args[0]] = args[1];\n      }\n\n      dict.set('searchOptions', options);\n      this.paginate(1);\n    },\n\n    /**\n     * Remove custom properties for search.\n     */\n    removeProps() {\n      let options = dict.get('searchOptions') || {};\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      if (!_.isEmpty(args)) {\n        options.props = _.omit(options.props, args) || {};\n      } else {\n        options.props = {};\n      }\n\n      dict.set('searchOptions', options);\n      this.paginate(1);\n    },\n\n    /**\n     * Reset the search.\n     */\n    reset() {\n      this.search('');\n      this.paginate(1);\n      dict.set('searchOptions', {});\n    }\n\n  };\n};","map":{"version":3,"sources":["packages/easysearch:components/lib/component-methods.js"],"names":["EasySearch","_getComponentMethods","dict","index","search","searchDefinition","set","props","get","getCursor","options","showDocuments","check","Match","Optional","Object","Cursor","emptyCursor","cursor","searchOptions","_getSearchOptions","count","isReady","limit","skip","mongoCursor","searchIsEmpty","_","isString","trim","length","hasNoResults","isNumber","isSearching","hasMoreDocuments","loadMore","Number","currentCount","paginate","page","addProps","args","isObject","extend","removeProps","isEmpty","omit","reset"],"mappings":"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","sourcesContent":["EasySearch._getComponentMethods = function (dict, index) {\n  return {\n    /**\n     * Search a component for the given search string.\n     *\n     * @param {Object|String} searchDefinition Search definition\n     */\n    search: (searchDefinition) => {\n      dict.set('searchOptions', {\n        props: (dict.get('searchOptions') || {}).props\n      });\n\n      dict.set('searchDefinition', searchDefinition);\n      dict.set('stopPublication', true);\n    },\n    /**\n     * Return the EasySearch.Cursor for the current search.\n     *\n     * @returns {Cursor}\n     */\n    getCursor: () => {\n      const searchDefinition = dict.get('searchDefinition') || '',\n        options = dict.get('searchOptions') || {},\n        showDocuments = dict.get('showDocuments');\n\n      check(options, Match.Optional(Object));\n\n      if (false === showDocuments) {\n        dict.set('count', 0);\n        dict.set('searching', false);\n        dict.set('limit', 0);\n        dict.set('skip', 0);\n        dict.set('currentCount', 0);\n        dict.set('stopPublication', false);\n\n        return EasySearch.Cursor.emptyCursor;\n      }\n\n      const cursor = index.search(searchDefinition, options),\n        searchOptions = index._getSearchOptions(options);\n\n      dict.set('count', cursor.count());\n      dict.set('searching', !cursor.isReady());\n      dict.set('limit', searchOptions.limit);\n      dict.set('skip', searchOptions.skip);\n      dict.set('currentCount', cursor.mongoCursor.count());\n      dict.set('stopPublication', false);\n\n      return cursor;\n    },\n    /**\n     * Return true if the current search string is empty.\n     *\n     * @returns {boolean}\n     */\n    searchIsEmpty: () => {\n      let searchDefinition = dict.get('searchDefinition');\n\n      return !searchDefinition || (_.isString(searchDefinition) && 0 === searchDefinition.trim().length);\n    },\n    /**\n     * Return true if the component has no results.\n     *\n     * @returns {boolean}\n     */\n    hasNoResults: () => {\n      let count = dict.get('count'),\n        showDocuments = dict.get('showDocuments');\n\n      return false !== showDocuments\n        && !dict.get('searching')\n        && (!_.isNumber(count) || 0 === count);\n    },\n    /**\n     * Return true if the component is being searched.\n     *\n     * @returns {boolean}\n     */\n    isSearching: () => {\n      return !!dict.get('searching');\n    },\n    /**\n     * Return true if the component has more documents than displayed right now.\n     *\n     * @returns {boolean}\n     */\n    hasMoreDocuments: () => {\n      return dict.get('currentCount') < dict.get('count');\n    },\n    /**\n     * Load more documents for the component.\n     *\n     * @param {Number} count Count of docs\n     */\n    loadMore: (count) => {\n      check(count, Number);\n\n      let currentCount = dict.get('currentCount'),\n        options = dict.get('searchOptions') || {};\n\n      options.limit = currentCount + count;\n      dict.set('searchOptions', options);\n    },\n    /**\n     * Paginate through documents for the given page.\n     *\n     * @param {Number} page Page number\n     */\n    paginate: (page) => {\n      check(page, Number);\n\n      let options = dict.get('searchOptions') || {},\n        limit = dict.get('limit');\n\n      options.skip = limit * (page - 1);\n      dict.set('currentPage', page);\n      dict.set('searchOptions', options);\n      dict.set('stopPublication', true);\n    },\n    /**\n     * Add custom properties for search.\n     */\n    addProps(...args) {\n      let options = dict.get('searchOptions') || {};\n\n      options.props = options.props || {};\n\n      if (_.isObject(args[0])) {\n        options.props = _.extend(options.props, args[0]);\n      } else if (_.isString(args[0])) {\n        options.props[args[0]] = args[1];\n      }\n\n      dict.set('searchOptions', options);\n      this.paginate(1);\n    },\n    /**\n     * Remove custom properties for search.\n     */\n    removeProps(...args) {\n      let options = dict.get('searchOptions') || {};\n\n      if (!_.isEmpty(args)) {\n        options.props = _.omit(options.props, args) || {};\n      } else {\n        options.props = {};\n      }\n\n      dict.set('searchOptions', options);\n      this.paginate(1);\n    },\n    /**\n     * Reset the search.\n     */\n    reset() {\n      this.search('');\n      this.paginate(1);\n      dict.set('searchOptions', {});\n    },\n  };\n};\n"]},"sourceType":"script","hash":"6301bc53db43d0d389345f1baf0af026fe4f0211"}
