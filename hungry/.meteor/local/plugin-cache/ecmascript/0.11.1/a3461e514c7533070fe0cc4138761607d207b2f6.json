{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\aldeed:autoform\\inputTypes\\textarea\\textarea.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/aldeed:autoform/inputTypes/textarea/textarea.js","filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\aldeed:autoform\\inputTypes\\textarea\\textarea.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","root":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","generatorOpts":{"filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\aldeed:autoform\\inputTypes\\textarea\\textarea.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/aldeed:autoform/inputTypes/textarea/textarea.js"}},"code":"AutoForm.addInputType(\"textarea\", {\n  template: \"afTextarea\",\n  valueConverters: {\n    \"stringArray\": function (val) {\n      if (typeof val === \"string\" && val.length > 0) {\n        return linesToArray(val);\n      }\n\n      return val;\n    },\n    \"number\": AutoForm.valueConverters.stringToNumber,\n    \"numberArray\": AutoForm.valueConverters.stringToNumberArray,\n    \"boolean\": AutoForm.valueConverters.stringToBoolean,\n    \"booleanArray\": function (val) {\n      if (typeof val === \"string\" && val.length > 0) {\n        var arr = linesToArray(val);\n        return _.map(arr, function (item) {\n          return AutoForm.valueConverters.stringToBoolean(item);\n        });\n      }\n\n      return val;\n    },\n    \"date\": AutoForm.valueConverters.stringToDate,\n    \"dateArray\": function (val) {\n      if (typeof val === \"string\" && val.length > 0) {\n        var arr = linesToArray(val);\n        return _.map(arr, function (item) {\n          return AutoForm.valueConverters.stringToDate(item);\n        });\n      }\n\n      return val;\n    }\n  },\n  contextAdjust: function (context) {\n    if (typeof context.atts.maxlength === \"undefined\" && typeof context.max === \"number\") {\n      context.atts.maxlength = context.max;\n    }\n\n    return context;\n  }\n});\n\nfunction linesToArray(text) {\n  text = text.split('\\n');\n  var lines = [];\n\n  _.each(text, function (line) {\n    line = $.trim(line);\n\n    if (line.length) {\n      lines.push(line);\n    }\n  });\n\n  return lines;\n}","map":{"version":3,"sources":["packages/aldeed:autoform/inputTypes/textarea/textarea.js"],"names":["AutoForm","addInputType","template","valueConverters","val","length","linesToArray","stringToNumber","stringToNumberArray","stringToBoolean","arr","_","map","item","stringToDate","contextAdjust","context","atts","maxlength","max","text","split","lines","each","line","$","trim","push"],"mappings":"AAAAA,SAASC,YAAT,CAAsB,UAAtB,EAAkC;AAChCC,YAAU,YADsB;AAEhCC,mBAAiB;AACf,mBAAe,UAAUC,GAAV,EAAe;AAC5B,UAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,IAAIC,MAAJ,GAAa,CAA5C,EAA+C;AAC7C,eAAOC,aAAaF,GAAb,CAAP;AACD;;AACD,aAAOA,GAAP;AACD,KANc;AAOf,cAAUJ,SAASG,eAAT,CAAyBI,cAPpB;AAQf,mBAAeP,SAASG,eAAT,CAAyBK,mBARzB;AASf,eAAWR,SAASG,eAAT,CAAyBM,eATrB;AAUf,oBAAgB,UAAUL,GAAV,EAAe;AAC7B,UAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,IAAIC,MAAJ,GAAa,CAA5C,EAA+C;AAC7C,YAAIK,MAAMJ,aAAaF,GAAb,CAAV;AACA,eAAOO,EAAEC,GAAF,CAAMF,GAAN,EAAW,UAAUG,IAAV,EAAgB;AAChC,iBAAOb,SAASG,eAAT,CAAyBM,eAAzB,CAAyCI,IAAzC,CAAP;AACD,SAFM,CAAP;AAGD;;AACD,aAAOT,GAAP;AACD,KAlBc;AAmBf,YAAQJ,SAASG,eAAT,CAAyBW,YAnBlB;AAoBf,iBAAa,UAAUV,GAAV,EAAe;AAC1B,UAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,IAAIC,MAAJ,GAAa,CAA5C,EAA+C;AAC7C,YAAIK,MAAMJ,aAAaF,GAAb,CAAV;AACA,eAAOO,EAAEC,GAAF,CAAMF,GAAN,EAAW,UAAUG,IAAV,EAAgB;AAChC,iBAAOb,SAASG,eAAT,CAAyBW,YAAzB,CAAsCD,IAAtC,CAAP;AACD,SAFM,CAAP;AAGD;;AACD,aAAOT,GAAP;AACD;AA5Bc,GAFe;AAgChCW,iBAAe,UAAUC,OAAV,EAAmB;AAChC,QAAI,OAAOA,QAAQC,IAAR,CAAaC,SAApB,KAAkC,WAAlC,IAAiD,OAAOF,QAAQG,GAAf,KAAuB,QAA5E,EAAsF;AACpFH,cAAQC,IAAR,CAAaC,SAAb,GAAyBF,QAAQG,GAAjC;AACD;;AACD,WAAOH,OAAP;AACD;AArC+B,CAAlC;;AAwCA,SAASV,YAAT,CAAsBc,IAAtB,EAA4B;AAC1BA,SAAOA,KAAKC,KAAL,CAAW,IAAX,CAAP;AACA,MAAIC,QAAQ,EAAZ;;AACAX,IAAEY,IAAF,CAAOH,IAAP,EAAa,UAAUI,IAAV,EAAgB;AAC3BA,WAAOC,EAAEC,IAAF,CAAOF,IAAP,CAAP;;AACA,QAAIA,KAAKnB,MAAT,EAAiB;AACfiB,YAAMK,IAAN,CAAWH,IAAX;AACD;AACF,GALD;;AAMA,SAAOF,KAAP;AACD","sourcesContent":["AutoForm.addInputType(\"textarea\", {\n  template: \"afTextarea\",\n  valueConverters: {\n    \"stringArray\": function (val) {\n      if (typeof val === \"string\" && val.length > 0) {\n        return linesToArray(val);\n      }\n      return val;\n    },\n    \"number\": AutoForm.valueConverters.stringToNumber,\n    \"numberArray\": AutoForm.valueConverters.stringToNumberArray,\n    \"boolean\": AutoForm.valueConverters.stringToBoolean,\n    \"booleanArray\": function (val) {\n      if (typeof val === \"string\" && val.length > 0) {\n        var arr = linesToArray(val);\n        return _.map(arr, function (item) {\n          return AutoForm.valueConverters.stringToBoolean(item);\n        });\n      }\n      return val;\n    },\n    \"date\": AutoForm.valueConverters.stringToDate,\n    \"dateArray\": function (val) {\n      if (typeof val === \"string\" && val.length > 0) {\n        var arr = linesToArray(val);\n        return _.map(arr, function (item) {\n          return AutoForm.valueConverters.stringToDate(item);\n        });\n      }\n      return val;\n    }\n  },\n  contextAdjust: function (context) {\n    if (typeof context.atts.maxlength === \"undefined\" && typeof context.max === \"number\") {\n      context.atts.maxlength = context.max;\n    }\n    return context;\n  }\n});\n\nfunction linesToArray(text) {\n  text = text.split('\\n');\n  var lines = [];\n  _.each(text, function (line) {\n    line = $.trim(line);\n    if (line.length) {\n      lines.push(line);\n    }\n  });\n  return lines;\n}\n"]},"sourceType":"script","hash":"a3461e514c7533070fe0cc4138761607d207b2f6"}
