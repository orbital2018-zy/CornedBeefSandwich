{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry\\packages\\easysearch:core\\lib\\engines\\mongo-text-index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/easysearch:core/lib/engines/mongo-text-index.js","filename":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry\\packages\\easysearch:core\\lib\\engines\\mongo-text-index.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry","root":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry","generatorOpts":{"filename":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry\\packages\\easysearch:core\\lib\\engines\\mongo-text-index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/easysearch:core/lib/engines/mongo-text-index.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar ReactiveEngine;\nmodule.watch(require(\"../core/reactive-engine\"), {\n  \"default\": function (v) {\n    ReactiveEngine = v;\n  }\n}, 0);\nvar MongoDBEngine;\nmodule.watch(require(\"./mongo-db\"), {\n  \"default\": function (v) {\n    MongoDBEngine = v;\n  }\n}, 1);\n\n/**\n * The MongoTextIndexEngine lets you search the index with Mongo text indexes.\n *\n * @type {MongoTextIndexEngine}\n */\nvar MongoTextIndexEngine =\n/*#__PURE__*/\nfunction (_ReactiveEngine) {\n  (0, _inheritsLoose2.default)(MongoTextIndexEngine, _ReactiveEngine);\n\n  function MongoTextIndexEngine() {\n    return _ReactiveEngine.apply(this, arguments) || this;\n  }\n\n  var _proto = MongoTextIndexEngine.prototype;\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  _proto.defaultConfiguration = function () {\n    function defaultConfiguration() {\n      var mongoConfiguration = MongoDBEngine.defaultMongoConfiguration(this);\n\n      mongoConfiguration.selector = function (searchString) {\n        if (searchString.trim()) {\n          return {\n            $text: {\n              $search: searchString\n            }\n          };\n        }\n\n        return {};\n      };\n\n      return _.defaults({}, mongoConfiguration, _ReactiveEngine.prototype.defaultConfiguration.call(this));\n    }\n\n    return defaultConfiguration;\n  }();\n  /**\n   * Setup the index on creation.\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n\n\n  _proto.onIndexCreate = function () {\n    function onIndexCreate(indexConfig) {\n      _ReactiveEngine.prototype.onIndexCreate.call(this, indexConfig);\n\n      if (Meteor.isServer) {\n        var textIndexesConfig = {};\n\n        _.each(indexConfig.fields, function (field) {\n          textIndexesConfig[field] = 'text';\n        });\n\n        if (indexConfig.weights) {\n          textIndexesConfig.weights = options.weights();\n        }\n\n        indexConfig.collection._ensureIndex(textIndexesConfig);\n      }\n    }\n\n    return onIndexCreate;\n  }();\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n\n\n  _proto.transformSearchDefinition = function () {\n    function transformSearchDefinition(searchDefinition, options) {\n      return searchDefinition;\n    }\n\n    return transformSearchDefinition;\n  }();\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n\n\n  _proto.checkSearchParam = function () {\n    function checkSearchParam(search) {\n      check(search, String);\n    }\n\n    return checkSearchParam;\n  }();\n\n  return MongoTextIndexEngine;\n}(ReactiveEngine); // Explicitely inherit getSearchCursor method functionality\n\n\nMongoTextIndexEngine.prototype.getSearchCursor = MongoDBEngine.prototype.getSearchCursor;\nMongoTextIndexEngine.prototype.getFindOptions = MongoDBEngine.prototype.getFindOptions;\nmodule.exportDefault(MongoTextIndexEngine);","map":{"version":3,"sources":["packages/easysearch:core/lib/engines/mongo-text-index.js"],"names":["ReactiveEngine","module","watch","require","v","MongoDBEngine","MongoTextIndexEngine","defaultConfiguration","mongoConfiguration","defaultMongoConfiguration","selector","searchString","trim","$text","$search","_","defaults","onIndexCreate","indexConfig","Meteor","isServer","textIndexesConfig","each","fields","field","weights","options","collection","_ensureIndex","transformSearchDefinition","searchDefinition","checkSearchParam","search","check","String","prototype","getSearchCursor","getFindOptions","exportDefault"],"mappings":";;;;AAAA,IAAIA,cAAJ;AAAmBC,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAAA,uBAASC,CAAT,EAAW;AAACJ,qBAAeI,CAAf;AAAiB;AAA7B,CAAhD,EAA+E,CAA/E;AAAkF,IAAIC,aAAJ;AAAkBJ,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACC,oBAAcD,CAAd;AAAgB;AAA5B,CAAnC,EAAiE,CAAjE;;AAGvH;;;;;IAKME,oB;;;;;;;;;;;AACJ;;;;;SAKAC,oB;oCAAuB;AACrB,UAAIC,qBAAqBH,cAAcI,yBAAd,CAAwC,IAAxC,CAAzB;;AAEAD,yBAAmBE,QAAnB,GAA8B,UAAUC,YAAV,EAAwB;AACpD,YAAIA,aAAaC,IAAb,EAAJ,EAAyB;AACvB,iBAAO;AAAEC,mBAAO;AAAEC,uBAASH;AAAX;AAAT,WAAP;AACD;;AAED,eAAO,EAAP;AACD,OAND;;AAQA,aAAOI,EAAEC,QAAF,CAAW,EAAX,EAAeR,kBAAf,4BAAyCD,oBAAzC,YAAP;AACD;;;;AAED;;;;;;;SAKAU,a;2BAAcC,W,EAAa;AACzB,gCAAMD,aAAN,YAAoBC,WAApB;;AAEA,UAAIC,OAAOC,QAAX,EAAqB;AACnB,YAAIC,oBAAoB,EAAxB;;AAEAN,UAAEO,IAAF,CAAOJ,YAAYK,MAAnB,EAA2B,UAAUC,KAAV,EAAiB;AAC1CH,4BAAkBG,KAAlB,IAA2B,MAA3B;AACD,SAFD;;AAIA,YAAIN,YAAYO,OAAhB,EAAyB;AACvBJ,4BAAkBI,OAAlB,GAA4BC,QAAQD,OAAR,EAA5B;AACD;;AAEDP,oBAAYS,UAAZ,CAAuBC,YAAvB,CAAoCP,iBAApC;AACD;AACF;;;;AAED;;;;;;;;;;SAQAQ,yB;uCAA0BC,gB,EAAkBJ,O,EAAS;AACnD,aAAOI,gBAAP;AACD;;;;AAED;;;;;;;SAKAC,gB;8BAAiBC,M,EAAQ;AACvBC,YAAMD,MAAN,EAAcE,MAAd;AACD;;;;;;EA9DgClC,c,GAiEnC;;;AACAM,qBAAqB6B,SAArB,CAA+BC,eAA/B,GAAiD/B,cAAc8B,SAAd,CAAwBC,eAAzE;AACA9B,qBAAqB6B,SAArB,CAA+BE,cAA/B,GAAgDhC,cAAc8B,SAAd,CAAwBE,cAAxE;AA3EApC,OAAOqC,aAAP,CA6EehC,oBA7Ef","sourcesContent":["import ReactiveEngine from '../core/reactive-engine';\nimport MongoDBEngine from './mongo-db';\n\n/**\n * The MongoTextIndexEngine lets you search the index with Mongo text indexes.\n *\n * @type {MongoTextIndexEngine}\n */\nclass MongoTextIndexEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    let mongoConfiguration = MongoDBEngine.defaultMongoConfiguration(this);\n\n    mongoConfiguration.selector = function (searchString) {\n      if (searchString.trim()) {\n        return { $text: { $search: searchString } };\n      }\n\n      return {};\n    };\n\n    return _.defaults({}, mongoConfiguration, super.defaultConfiguration());\n  }\n\n  /**\n   * Setup the index on creation.\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n  onIndexCreate(indexConfig) {\n    super.onIndexCreate(indexConfig);\n\n    if (Meteor.isServer) {\n      let textIndexesConfig = {};\n\n      _.each(indexConfig.fields, function (field) {\n        textIndexesConfig[field] = 'text';\n      });\n\n      if (indexConfig.weights) {\n        textIndexesConfig.weights = options.weights();\n      }\n\n      indexConfig.collection._ensureIndex(textIndexesConfig);\n    }\n  }\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n  transformSearchDefinition(searchDefinition, options) {\n    return searchDefinition;\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n  checkSearchParam(search) {\n    check(search, String);\n  }\n}\n\n// Explicitely inherit getSearchCursor method functionality\nMongoTextIndexEngine.prototype.getSearchCursor = MongoDBEngine.prototype.getSearchCursor;\nMongoTextIndexEngine.prototype.getFindOptions = MongoDBEngine.prototype.getFindOptions;\n\nexport default MongoTextIndexEngine;\n"]},"sourceType":"script","hash":"618247a9053b1e37991c77913937bbba4397bef5"}
