{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry\\packages\\easysearch:core\\lib\\core\\index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/easysearch:core/lib/core/index.js","filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry\\packages\\easysearch:core\\lib\\core\\index.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry","root":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry","presets":[],"generatorOpts":{"filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungry\\packages\\easysearch:core\\lib\\core\\index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/easysearch:core/lib/core/index.js"}},"code":"let Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Engine;\nmodule.watch(require(\"./engine\"), {\n  default(v) {\n    Engine = v;\n  }\n\n}, 1);\n\n/**\n * An Index represents the main entry point for searching with EasySearch. It relies on\n * the given engine to have the search functionality and defines the data that should be searchable.\n *\n * @type {Index}\n */\nclass Index {\n  /**\n   * Constructor\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    check(config, Object);\n    check(config.fields, [String]);\n    if (!config.ignoreCollectionCheck) check(config.collection, Mongo.Collection);\n\n    if (!(config.engine instanceof Engine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof Engine');\n    }\n\n    if (!config.name) config.name = (config.collection._name || '').toLowerCase();\n    this.config = _.extend(Index.defaultConfiguration, config);\n    this.defaultSearchOptions = _.defaults({}, this.config.defaultSearchOptions, {\n      limit: 10,\n      skip: 0,\n      props: {}\n    }); // Engine specific code on index creation\n\n    config.engine.onIndexCreate(this.config);\n  }\n  /**\n   * Default configuration for an index.\n   *\n   * @returns {Object}\n   */\n\n\n  static get defaultConfiguration() {\n    return {\n      permission: () => true,\n      defaultSearchOptions: {},\n      countUpdateIntervalMs: 2000\n    };\n  }\n  /**\n   * Search the index.\n   *\n   * @param {Object|String} searchDefinition Search definition\n   * @param {Object}        options          Options\n   *\n   * @returns {Cursor}\n   */\n\n\n  search(searchDefinition, options = {}) {\n    this.config.engine.checkSearchParam(searchDefinition, this.config);\n    check(options, {\n      limit: Match.Optional(Number),\n      skip: Match.Optional(Number),\n      props: Match.Optional(Object),\n      userId: Match.Optional(Match.OneOf(String, null))\n    });\n    options = {\n      search: this._getSearchOptions(options),\n      index: this.config\n    };\n\n    if (!this.config.permission(options.search)) {\n      throw new Meteor.Error('not-allowed', \"Not allowed to search this index!\");\n    }\n\n    return this.config.engine.search(searchDefinition, options);\n  }\n  /**\n   * Returns the search options based on the given options.\n   *\n   * @param {Object} options Options to use\n   *\n   * @returns {Object}\n   */\n\n\n  _getSearchOptions(options) {\n    if (!Meteor.isServer) {\n      delete options.userId;\n    }\n\n    if (typeof options.userId === \"undefined\" && Meteor.userId) {\n      options.userId = Meteor.userId();\n    }\n\n    return _.defaults(options, this.defaultSearchOptions);\n  }\n\n}\n\nmodule.exportDefault(Index);","map":{"version":3,"sources":["packages/easysearch:core/lib/core/index.js"],"names":["Mongo","module","watch","require","v","Engine","default","Index","constructor","config","check","Object","fields","String","ignoreCollectionCheck","collection","Collection","engine","Meteor","Error","name","_name","toLowerCase","_","extend","defaultConfiguration","defaultSearchOptions","defaults","limit","skip","props","onIndexCreate","permission","countUpdateIntervalMs","search","searchDefinition","options","checkSearchParam","Match","Optional","Number","userId","OneOf","_getSearchOptions","index","isServer","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,QAAMI,CAAN,EAAQ;AAACJ,YAAMI,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,UAAR,CAAb,EAAiC;AAACG,UAAQF,CAAR,EAAU;AAACC,aAAOD,CAAP;AAAS;;AAArB,CAAjC,EAAwD,CAAxD;;AAGjF;;;;;;AAMA,MAAMG,KAAN,CAAY;AACV;;;;;;;AAOAC,cAAYC,MAAZ,EAAoB;AAClBC,UAAMD,MAAN,EAAcE,MAAd;AACAD,UAAMD,OAAOG,MAAb,EAAqB,CAACC,MAAD,CAArB;AACA,QAAG,CAACJ,OAAOK,qBAAX,EAAkCJ,MAAMD,OAAOM,UAAb,EAAyBf,MAAMgB,UAA/B;;AAElC,QAAI,EAAEP,OAAOQ,MAAP,YAAyBZ,MAA3B,CAAJ,EAAwC;AACtC,YAAM,IAAIa,OAAOC,KAAX,CAAiB,gBAAjB,EAAmC,sCAAnC,CAAN;AACD;;AAED,QAAI,CAACV,OAAOW,IAAZ,EACEX,OAAOW,IAAP,GAAc,CAACX,OAAOM,UAAP,CAAkBM,KAAlB,IAA2B,EAA5B,EAAgCC,WAAhC,EAAd;AAEF,SAAKb,MAAL,GAAcc,EAAEC,MAAF,CAASjB,MAAMkB,oBAAf,EAAqChB,MAArC,CAAd;AACA,SAAKiB,oBAAL,GAA4BH,EAAEI,QAAF,CAC1B,EAD0B,EAE1B,KAAKlB,MAAL,CAAYiB,oBAFc,EAG1B;AAAEE,aAAO,EAAT;AAAaC,YAAM,CAAnB;AAAsBC,aAAO;AAA7B,KAH0B,CAA5B,CAbkB,CAmBlB;;AACArB,WAAOQ,MAAP,CAAcc,aAAd,CAA4B,KAAKtB,MAAjC;AACD;AAED;;;;;;;AAKA,aAAWgB,oBAAX,GAAkC;AAChC,WAAO;AACLO,kBAAY,MAAM,IADb;AAELN,4BAAsB,EAFjB;AAGLO,6BAAuB;AAHlB,KAAP;AAKD;AAED;;;;;;;;;;AAQAC,SAAOC,gBAAP,EAAyBC,UAAU,EAAnC,EAAuC;AACrC,SAAK3B,MAAL,CAAYQ,MAAZ,CAAmBoB,gBAAnB,CAAoCF,gBAApC,EAAsD,KAAK1B,MAA3D;AAEAC,UAAM0B,OAAN,EAAe;AACbR,aAAOU,MAAMC,QAAN,CAAeC,MAAf,CADM;AAEbX,YAAMS,MAAMC,QAAN,CAAeC,MAAf,CAFO;AAGbV,aAAOQ,MAAMC,QAAN,CAAe5B,MAAf,CAHM;AAIb8B,cAAQH,MAAMC,QAAN,CAAeD,MAAMI,KAAN,CAAY7B,MAAZ,EAAoB,IAApB,CAAf;AAJK,KAAf;AAOAuB,cAAU;AACRF,cAAQ,KAAKS,iBAAL,CAAuBP,OAAvB,CADA;AAERQ,aAAO,KAAKnC;AAFJ,KAAV;;AAKA,QAAI,CAAC,KAAKA,MAAL,CAAYuB,UAAZ,CAAuBI,QAAQF,MAA/B,CAAL,EAA6C;AAC3C,YAAM,IAAIhB,OAAOC,KAAX,CAAiB,aAAjB,EAAgC,mCAAhC,CAAN;AACD;;AAED,WAAO,KAAKV,MAAL,CAAYQ,MAAZ,CAAmBiB,MAAnB,CAA0BC,gBAA1B,EAA4CC,OAA5C,CAAP;AACD;AAED;;;;;;;;;AAOAO,oBAAkBP,OAAlB,EAA2B;AACzB,QAAI,CAAClB,OAAO2B,QAAZ,EAAsB;AACpB,aAAOT,QAAQK,MAAf;AACD;;AAED,QAAI,OAAOL,QAAQK,MAAf,KAA0B,WAA1B,IAAyCvB,OAAOuB,MAApD,EAA4D;AAC1DL,cAAQK,MAAR,GAAiBvB,OAAOuB,MAAP,EAAjB;AACD;;AAED,WAAOlB,EAAEI,QAAF,CAAWS,OAAX,EAAoB,KAAKV,oBAAzB,CAAP;AACD;;AA3FS;;AATZzB,OAAO6C,aAAP,CAuGevC,KAvGf","sourcesContent":["import { Mongo } from 'meteor/mongo'\nimport Engine from './engine'\n\n/**\n * An Index represents the main entry point for searching with EasySearch. It relies on\n * the given engine to have the search functionality and defines the data that should be searchable.\n *\n * @type {Index}\n */\nclass Index {\n  /**\n   * Constructor\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    check(config, Object);\n    check(config.fields, [String]);\n    if(!config.ignoreCollectionCheck) check(config.collection, Mongo.Collection);\n\n    if (!(config.engine instanceof Engine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof Engine');\n    }\n\n    if (!config.name)\n      config.name = (config.collection._name || '').toLowerCase();\n\n    this.config = _.extend(Index.defaultConfiguration, config);\n    this.defaultSearchOptions = _.defaults(\n      {},\n      this.config.defaultSearchOptions,\n      { limit: 10, skip: 0, props: {} },\n    );\n\n    // Engine specific code on index creation\n    config.engine.onIndexCreate(this.config);\n  }\n\n  /**\n   * Default configuration for an index.\n   *\n   * @returns {Object}\n   */\n  static get defaultConfiguration() {\n    return {\n      permission: () => true,\n      defaultSearchOptions: {},\n      countUpdateIntervalMs: 2000,\n    };\n  }\n\n  /**\n   * Search the index.\n   *\n   * @param {Object|String} searchDefinition Search definition\n   * @param {Object}        options          Options\n   *\n   * @returns {Cursor}\n   */\n  search(searchDefinition, options = {}) {\n    this.config.engine.checkSearchParam(searchDefinition, this.config);\n\n    check(options, {\n      limit: Match.Optional(Number),\n      skip: Match.Optional(Number),\n      props: Match.Optional(Object),\n      userId: Match.Optional(Match.OneOf(String, null)),\n    });\n\n    options = {\n      search: this._getSearchOptions(options),\n      index: this.config,\n    };\n\n    if (!this.config.permission(options.search)) {\n      throw new Meteor.Error('not-allowed', \"Not allowed to search this index!\");\n    }\n\n    return this.config.engine.search(searchDefinition, options);\n  }\n\n  /**\n   * Returns the search options based on the given options.\n   *\n   * @param {Object} options Options to use\n   *\n   * @returns {Object}\n   */\n  _getSearchOptions(options) {\n    if (!Meteor.isServer) {\n      delete options.userId;\n    }\n\n    if (typeof options.userId === \"undefined\" && Meteor.userId) {\n      options.userId = Meteor.userId();\n    }\n\n    return _.defaults(options, this.defaultSearchOptions);\n  }\n}\n\nexport default Index;\n"]},"sourceType":"script","hash":"518ff949739c49a6a57567007f4438701da83312"}
