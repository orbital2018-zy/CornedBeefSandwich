{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\easysearch:core\\lib\\core\\search-collection.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/easysearch:core/lib/core/search-collection.js","filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\easysearch:core\\lib\\core\\search-collection.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","root":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry","generatorOpts":{"filename":"C:\\Users\\sandh\\Documents\\NUS\\Orbital\\GitHungry\\app\\orbital\\hungrymine\\hungry\\packages\\easysearch:core\\lib\\core\\search-collection.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/easysearch:core/lib/core/search-collection.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Cursor;\nmodule.watch(require(\"./cursor\"), {\n  \"default\": function (v) {\n    Cursor = v;\n  }\n}, 1);\nvar ReactiveEngine;\nmodule.watch(require(\"./reactive-engine\"), {\n  \"default\": function (v) {\n    ReactiveEngine = v;\n  }\n}, 2);\n\n/**\n * A search collection represents a reactive collection on the client,\n * which is used by the ReactiveEngine for searching.\n *\n * @type {SearchCollection}\n */\nvar SearchCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param {Object}         indexConfiguration Index configuration\n   * @param {ReactiveEngine} engine             Reactive Engine\n   *\n   * @constructor\n   */\n  function SearchCollection(indexConfiguration, engine) {\n    check(indexConfiguration, Object);\n    check(indexConfiguration.name, Match.OneOf(String, null));\n\n    if (!(engine instanceof ReactiveEngine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof ReactiveEngine');\n    }\n\n    this._indexConfiguration = indexConfiguration;\n    this._name = indexConfiguration.name + \"/easySearch\";\n    this._engine = engine;\n\n    if (Meteor.isClient) {\n      this._collection = new Mongo.Collection(this._name);\n    } else if (Meteor.isServer) {\n      this._setUpPublication();\n    }\n  }\n  /**\n   * Get name\n   *\n   * @returns {String}\n   */\n\n\n  var _proto = SearchCollection.prototype;\n\n  /**\n   * Find documents on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  _proto.find = function () {\n    function find(searchDefinition, options) {\n      if (!Meteor.isClient) {\n        throw new Error('find can only be used on client');\n      }\n\n      var publishHandle = Meteor.subscribe(this.name, searchDefinition, options);\n\n      var count = this._getCount(searchDefinition);\n\n      var mongoCursor = this._getMongoCursor(searchDefinition, options);\n\n      if (!_.isNumber(count)) {\n        return new Cursor(mongoCursor, 0, false);\n      }\n\n      return new Cursor(mongoCursor, count, true, publishHandle);\n    }\n\n    return find;\n  }();\n  /**\n   * Get the count of the cursor.\n   *\n   * @params {Object} searchDefinition Search definition\n   *\n   * @returns {Cursor.count}\n   *\n   * @private\n   */\n\n\n  _proto._getCount = function () {\n    function _getCount(searchDefinition) {\n      var countDoc = this._collection.findOne('searchCount' + JSON.stringify(searchDefinition));\n\n      if (countDoc) {\n        return countDoc.count;\n      }\n    }\n\n    return _getCount;\n  }();\n  /**\n   * Get the mongo cursor on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Search options\n   *\n   * @returns {Cursor}\n   * @private\n   */\n\n\n  _proto._getMongoCursor = function () {\n    function _getMongoCursor(searchDefinition, options) {\n      var _this = this;\n\n      var clientSort = this.engine.callConfigMethod('clientSort', searchDefinition, options);\n      return this._collection.find({\n        __searchDefinition: JSON.stringify(searchDefinition),\n        __searchOptions: JSON.stringify(options.props)\n      }, {\n        transform: function (doc) {\n          delete doc.__searchDefinition;\n          delete doc.__searchOptions;\n          delete doc.__sortPosition;\n          doc = _this.engine.config.transform(doc);\n          return doc;\n        },\n        sort: clientSort ? clientSort : ['__sortPosition']\n      });\n    }\n\n    return _getMongoCursor;\n  }();\n  /**\n   * Return a unique document id for publication.\n   *\n   * @param {Document} doc\n   *\n   * @returns string\n   */\n\n\n  _proto.generateId = function () {\n    function generateId(doc) {\n      return doc._id + doc.__searchDefinition + doc.__searchOptions;\n    }\n\n    return generateId;\n  }();\n  /**\n   * Add custom fields to the given document\n   *\n   * @param {Document} doc\n   * @param {Object}   data\n   * @returns {*}\n   */\n\n\n  _proto.addCustomFields = function () {\n    function addCustomFields(doc, data) {\n      _.forEach(data, function (val, key) {\n        doc['__' + key] = val;\n      });\n\n      return doc;\n    }\n\n    return addCustomFields;\n  }();\n  /**\n   * Set up publication.\n   *\n   * @private\n   */\n\n\n  _proto._setUpPublication = function () {\n    function _setUpPublication() {\n      var collectionScope = this,\n          collectionName = this.name;\n      Meteor.publish(collectionName, function (searchDefinition, options) {\n        var _this2 = this;\n\n        check(searchDefinition, Match.OneOf(String, Object));\n        check(options, Object);\n        var definitionString = JSON.stringify(searchDefinition),\n            optionsString = JSON.stringify(options.props);\n        options.userId = this.userId;\n        options.publicationScope = this;\n\n        if (!collectionScope._indexConfiguration.permission(options)) {\n          throw new Meteor.Error('not-allowed', \"You're not allowed to search this index!\");\n        }\n\n        collectionScope.engine.checkSearchParam(searchDefinition, collectionScope._indexConfiguration);\n        var cursor = collectionScope.engine.search(searchDefinition, {\n          search: options,\n          index: collectionScope._indexConfiguration\n        });\n        var count = cursor.count();\n        this.added(collectionName, 'searchCount' + definitionString, {\n          count: count\n        });\n        var intervalID;\n\n        if (collectionScope._indexConfiguration.countUpdateIntervalMs) {\n          intervalID = Meteor.setInterval(function () {\n            return _this2.changed(collectionName, 'searchCount' + definitionString, {\n              count: cursor.mongoCursor.count && cursor.mongoCursor.count() || 0\n            });\n          }, collectionScope._indexConfiguration.countUpdateIntervalMs);\n        }\n\n        this.onStop(function () {\n          intervalID && Meteor.clearInterval(intervalID);\n          resultsHandle && resultsHandle.stop();\n        });\n        var observedDocs = [];\n\n        var updateDocWithCustomFields = function (doc, sortPosition) {\n          return collectionScope.addCustomFields(doc, {\n            originalId: doc._id,\n            sortPosition: sortPosition,\n            searchDefinition: definitionString,\n            searchOptions: optionsString\n          });\n        };\n\n        var resultsHandle = cursor.mongoCursor.observe({\n          addedAt: function (doc, atIndex, before) {\n            doc = collectionScope.engine.config.beforePublish('addedAt', doc, atIndex, before);\n            doc = updateDocWithCustomFields(doc, atIndex);\n\n            _this2.added(collectionName, collectionScope.generateId(doc), doc);\n            /*\n             * Reorder all observed docs to keep valid sorting. Here we adjust the\n             * sortPosition number field to give space for the newly added doc\n             */\n\n\n            if (observedDocs.map(function (d) {\n              return d.__sortPosition;\n            }).includes(atIndex)) {\n              observedDocs = observedDocs.map(function (doc, docIndex) {\n                if (doc.__sortPosition >= atIndex) {\n                  doc = collectionScope.addCustomFields(doc, {\n                    sortPosition: doc.__sortPosition + 1\n                  }); // do not throw changed event on last doc as it will be removed from cursor\n\n                  if (docIndex < observedDocs.length) {\n                    _this2.changed(collectionName, collectionScope.generateId(doc), doc);\n                  }\n                }\n\n                return doc;\n              });\n            }\n\n            observedDocs = (0, _toConsumableArray2.default)(observedDocs).concat([doc]);\n          },\n          changedAt: function (doc, oldDoc, atIndex) {\n            doc = collectionScope.engine.config.beforePublish('changedAt', doc, oldDoc, atIndex);\n            doc = collectionScope.addCustomFields(doc, {\n              searchDefinition: definitionString,\n              searchOptions: optionsString,\n              sortPosition: atIndex,\n              originalId: doc._id\n            });\n\n            _this2.changed(collectionName, collectionScope.generateId(doc), doc);\n          },\n          movedTo: function (doc, fromIndex, toIndex, before) {\n            doc = collectionScope.engine.config.beforePublish('movedTo', doc, fromIndex, toIndex, before);\n            doc = updateDocWithCustomFields(doc, toIndex);\n\n            var beforeDoc = collectionScope._indexConfiguration.collection.findOne(before);\n\n            if (beforeDoc) {\n              beforeDoc = collectionScope.addCustomFields(beforeDoc, {\n                searchDefinition: definitionString,\n                searchOptions: optionsString,\n                sortPosition: fromIndex\n              });\n\n              _this2.changed(collectionName, collectionScope.generateId(beforeDoc), beforeDoc);\n            }\n\n            _this2.changed(collectionName, collectionScope.generateId(doc), doc);\n          },\n          removedAt: function (doc, atIndex) {\n            doc = collectionScope.engine.config.beforePublish('removedAt', doc, atIndex);\n            doc = collectionScope.addCustomFields(doc, {\n              searchDefinition: definitionString,\n              searchOptions: optionsString\n            });\n\n            _this2.removed(collectionName, collectionScope.generateId(doc));\n            /*\n             * Adjust sort position for all docs after the removed doc and\n             * remove the doc from the observed docs array\n             */\n\n\n            observedDocs = observedDocs.map(function (doc) {\n              if (doc.__sortPosition > atIndex) {\n                doc.__sortPosition -= 1;\n              }\n\n              return doc;\n            }).filter(function (d) {\n              return collectionScope.generateId(d) !== collectionScope.generateId(doc);\n            });\n          }\n        });\n        this.onStop(function () {\n          resultsHandle.stop();\n        });\n        this.ready();\n      });\n    }\n\n    return _setUpPublication;\n  }();\n\n  (0, _createClass2.default)(SearchCollection, [{\n    key: \"name\",\n    get: function () {\n      return this._name;\n    }\n    /**\n     * Get engine\n     *\n     * @returns {ReactiveEngine}\n     */\n\n  }, {\n    key: \"engine\",\n    get: function () {\n      return this._engine;\n    }\n  }]);\n  return SearchCollection;\n}();\n\nmodule.exportDefault(SearchCollection);","map":{"version":3,"sources":["packages/easysearch:core/lib/core/search-collection.js"],"names":["Mongo","module","watch","require","v","Cursor","ReactiveEngine","SearchCollection","indexConfiguration","engine","check","Object","name","Match","OneOf","String","Meteor","Error","_indexConfiguration","_name","_engine","isClient","_collection","Collection","isServer","_setUpPublication","find","searchDefinition","options","publishHandle","subscribe","count","_getCount","mongoCursor","_getMongoCursor","_","isNumber","countDoc","findOne","JSON","stringify","clientSort","callConfigMethod","__searchDefinition","__searchOptions","props","transform","doc","__sortPosition","config","sort","generateId","_id","addCustomFields","data","forEach","val","key","collectionScope","collectionName","publish","definitionString","optionsString","userId","publicationScope","permission","checkSearchParam","cursor","search","index","added","intervalID","countUpdateIntervalMs","setInterval","changed","onStop","clearInterval","resultsHandle","stop","observedDocs","updateDocWithCustomFields","sortPosition","originalId","searchOptions","observe","addedAt","atIndex","before","beforePublish","map","d","includes","docIndex","length","changedAt","oldDoc","movedTo","fromIndex","toIndex","beforeDoc","collection","removedAt","removed","filter","ready","exportDefault"],"mappings":"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","sourcesContent":["import { Mongo } from 'meteor/mongo'\nimport Cursor from './cursor'\nimport ReactiveEngine from './reactive-engine'\n\n/**\n * A search collection represents a reactive collection on the client,\n * which is used by the ReactiveEngine for searching.\n *\n * @type {SearchCollection}\n */\nclass SearchCollection {\n  /**\n   * Constructor\n   *\n   * @param {Object}         indexConfiguration Index configuration\n   * @param {ReactiveEngine} engine             Reactive Engine\n   *\n   * @constructor\n   */\n  constructor(indexConfiguration, engine) {\n    check(indexConfiguration, Object);\n    check(indexConfiguration.name, Match.OneOf(String, null));\n\n    if (!(engine instanceof ReactiveEngine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof ReactiveEngine');\n    }\n\n    this._indexConfiguration = indexConfiguration;\n    this._name = `${indexConfiguration.name}/easySearch`;\n    this._engine = engine;\n\n    if (Meteor.isClient) {\n      this._collection = new Mongo.Collection(this._name);\n    } else if (Meteor.isServer) {\n      this._setUpPublication();\n    }\n  }\n\n  /**\n   * Get name\n   *\n   * @returns {String}\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * Get engine\n   *\n   * @returns {ReactiveEngine}\n   */\n  get engine() {\n    return this._engine;\n  }\n\n  /**\n   * Find documents on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  find(searchDefinition, options) {\n    if (!Meteor.isClient) {\n      throw new Error('find can only be used on client');\n    }\n\n    let publishHandle = Meteor.subscribe(this.name, searchDefinition, options);\n\n    let count = this._getCount(searchDefinition);\n    let mongoCursor = this._getMongoCursor(searchDefinition, options);\n\n    if (!_.isNumber(count)) {\n      return new Cursor(mongoCursor, 0, false);\n    }\n\n    return new Cursor(mongoCursor, count, true, publishHandle);\n  }\n\n  /**\n   * Get the count of the cursor.\n   *\n   * @params {Object} searchDefinition Search definition\n   *\n   * @returns {Cursor.count}\n   *\n   * @private\n   */\n  _getCount(searchDefinition) {\n    let countDoc = this._collection.findOne('searchCount' + JSON.stringify(searchDefinition));\n\n    if (countDoc) {\n      return countDoc.count;\n    }\n  }\n\n  /**\n   * Get the mongo cursor on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Search options\n   *\n   * @returns {Cursor}\n   * @private\n   */\n  _getMongoCursor(searchDefinition, options) {\n    const clientSort = this.engine.callConfigMethod('clientSort', searchDefinition, options);\n\n    return this._collection.find(\n      { __searchDefinition: JSON.stringify(searchDefinition), __searchOptions: JSON.stringify(options.props) },\n      {\n        transform: (doc) => {\n          delete doc.__searchDefinition;\n          delete doc.__searchOptions;\n          delete doc.__sortPosition;\n\n          doc = this.engine.config.transform(doc);\n\n          return doc;\n        },\n        sort: (clientSort ? clientSort : ['__sortPosition'])\n      }\n    );\n  }\n\n  /**\n   * Return a unique document id for publication.\n   *\n   * @param {Document} doc\n   *\n   * @returns string\n   */\n  generateId(doc) {\n    return doc._id + doc.__searchDefinition + doc.__searchOptions;\n  }\n\n  /**\n   * Add custom fields to the given document\n   *\n   * @param {Document} doc\n   * @param {Object}   data\n   * @returns {*}\n   */\n  addCustomFields(doc, data) {\n    _.forEach(data, function (val, key) {\n      doc['__' + key] = val;\n    });\n\n    return doc;\n  }\n\n  /**\n   * Set up publication.\n   *\n   * @private\n   */\n  _setUpPublication() {\n    var collectionScope = this,\n      collectionName = this.name;\n\n    Meteor.publish(collectionName, function (searchDefinition, options) {\n      check(searchDefinition, Match.OneOf(String, Object));\n      check(options, Object);\n\n      let definitionString = JSON.stringify(searchDefinition),\n        optionsString = JSON.stringify(options.props);\n\n      options.userId = this.userId;\n      options.publicationScope = this;\n\n      if (!collectionScope._indexConfiguration.permission(options)) {\n        throw new Meteor.Error('not-allowed', \"You're not allowed to search this index!\");\n      }\n\n      collectionScope.engine.checkSearchParam(searchDefinition, collectionScope._indexConfiguration);\n\n      let cursor = collectionScope.engine.search(searchDefinition, {\n        search: options,\n        index: collectionScope._indexConfiguration\n      });\n\n      const count = cursor.count();\n\n      this.added(collectionName, 'searchCount' + definitionString, { count });\n\n      let intervalID;\n\n      if (collectionScope._indexConfiguration.countUpdateIntervalMs) {\n        intervalID = Meteor.setInterval(\n          () => this.changed(\n            collectionName,\n            'searchCount' + definitionString,\n            { count: cursor.mongoCursor.count && cursor.mongoCursor.count() || 0 }\n          ),\n          collectionScope._indexConfiguration.countUpdateIntervalMs\n        );\n      }\n\n      this.onStop(function () {\n        intervalID && Meteor.clearInterval(intervalID);\n        resultsHandle && resultsHandle.stop();\n      });\n\n      let observedDocs = [];\n\n      const updateDocWithCustomFields = (doc, sortPosition) => collectionScope\n        .addCustomFields(doc, {\n          originalId: doc._id,\n          sortPosition,\n          searchDefinition: definitionString,\n          searchOptions: optionsString,\n        });\n\n      let resultsHandle = cursor.mongoCursor.observe({\n        addedAt: (doc, atIndex, before) => {\n          doc = collectionScope.engine.config.beforePublish('addedAt', doc, atIndex, before);\n          doc = updateDocWithCustomFields(doc, atIndex);\n\n          this.added(collectionName, collectionScope.generateId(doc), doc);\n\n          /*\n           * Reorder all observed docs to keep valid sorting. Here we adjust the\n           * sortPosition number field to give space for the newly added doc\n           */\n          if (observedDocs.map(d => d.__sortPosition).includes(atIndex)) {\n            observedDocs = observedDocs.map((doc, docIndex) => {\n              if (doc.__sortPosition >= atIndex) {\n                doc = collectionScope.addCustomFields(doc, {\n                  sortPosition: doc.__sortPosition + 1,\n                });\n\n                // do not throw changed event on last doc as it will be removed from cursor\n                if (docIndex < observedDocs.length) {\n                  this.changed(\n                    collectionName,\n                    collectionScope.generateId(doc),\n                    doc\n                  );\n                }\n              }\n\n              return doc;\n            });\n          }\n\n          observedDocs = [...observedDocs , doc];\n        },\n        changedAt: (doc, oldDoc, atIndex) => {\n          doc = collectionScope.engine.config.beforePublish('changedAt', doc, oldDoc, atIndex);\n          doc = collectionScope.addCustomFields(doc, {\n            searchDefinition: definitionString,\n            searchOptions: optionsString,\n            sortPosition: atIndex,\n            originalId: doc._id\n          });\n\n          this.changed(collectionName, collectionScope.generateId(doc), doc);\n        },\n        movedTo: (doc, fromIndex, toIndex, before) => {\n          doc = collectionScope.engine.config.beforePublish('movedTo', doc, fromIndex, toIndex, before);\n          doc = updateDocWithCustomFields(doc, toIndex);\n\n          let beforeDoc = collectionScope._indexConfiguration.collection.findOne(before);\n\n          if (beforeDoc) {\n            beforeDoc = collectionScope.addCustomFields(beforeDoc, {\n              searchDefinition: definitionString,\n              searchOptions: optionsString,\n              sortPosition: fromIndex\n            });\n            this.changed(collectionName, collectionScope.generateId(beforeDoc), beforeDoc);\n          }\n\n          this.changed(collectionName, collectionScope.generateId(doc), doc);\n        },\n        removedAt: (doc, atIndex) => {\n          doc = collectionScope.engine.config.beforePublish('removedAt', doc, atIndex);\n          doc = collectionScope.addCustomFields(\n            doc,\n            {\n              searchDefinition: definitionString,\n              searchOptions: optionsString\n            });\n          this.removed(collectionName, collectionScope.generateId(doc));\n\n          /*\n           * Adjust sort position for all docs after the removed doc and\n           * remove the doc from the observed docs array\n           */\n          observedDocs = observedDocs.map(doc => {\n            if (doc.__sortPosition > atIndex) {\n              doc.__sortPosition -= 1;\n            }\n\n            return doc;\n          }).filter(\n            d => collectionScope.generateId(d) !== collectionScope.generateId(doc)\n          );\n        }\n      });\n\n      this.onStop(function () {\n        resultsHandle.stop();\n      });\n\n      this.ready();\n    });\n  }\n}\n\nexport default SearchCollection;\n"]},"sourceType":"script","hash":"87aa55e2da6f77c465edf3bc76f6ce92bb6e6d16"}
