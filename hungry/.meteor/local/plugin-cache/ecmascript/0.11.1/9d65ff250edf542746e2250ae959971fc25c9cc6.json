{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry\\packages\\easysearch:core\\lib\\engines\\mongo-db.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/easysearch:core/lib/engines/mongo-db.js","filename":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry\\packages\\easysearch:core\\lib\\engines\\mongo-db.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry","root":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry","generatorOpts":{"filename":"C:\\Users\\zhenying\\Hungry\\CornedBeefSandwich\\hungry\\packages\\easysearch:core\\lib\\engines\\mongo-db.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/easysearch:core/lib/engines/mongo-db.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar Cursor;\nmodule.watch(require(\"../core/cursor\"), {\n  \"default\": function (v) {\n    Cursor = v;\n  }\n}, 0);\nvar ReactiveEngine;\nmodule.watch(require(\"../core/reactive-engine\"), {\n  \"default\": function (v) {\n    ReactiveEngine = v;\n  }\n}, 1);\n\n/**\n * The MongoDBEngine lets you search the index on the server side with MongoDB. Subscriptions and publications\n * are handled within the Engine.\n *\n * @type {MongoDBEngine}\n */\nvar MongoDBEngine =\n/*#__PURE__*/\nfunction (_ReactiveEngine) {\n  (0, _inheritsLoose2.default)(MongoDBEngine, _ReactiveEngine);\n\n  function MongoDBEngine() {\n    return _ReactiveEngine.apply(this, arguments) || this;\n  }\n\n  var _proto = MongoDBEngine.prototype;\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  _proto.defaultConfiguration = function () {\n    function defaultConfiguration() {\n      return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), _ReactiveEngine.prototype.defaultConfiguration.call(this));\n    }\n\n    return defaultConfiguration;\n  }();\n  /**\n   * Default mongo configuration, used in constructor and MinimongoEngine to get the configuration.\n   *\n   * @param {Object} engineScope Scope of the engine\n   *\n   * @returns {Object}\n   */\n\n\n  MongoDBEngine.defaultMongoConfiguration = function () {\n    function defaultMongoConfiguration(engineScope) {\n      return {\n        aggregation: '$or',\n        selector: function (searchObject, options, aggregation) {\n          var selector = {};\n          selector[aggregation] = [];\n\n          _.each(searchObject, function (searchString, field) {\n            var fieldSelector = engineScope.callConfigMethod('selectorPerField', field, searchString, options);\n\n            if (fieldSelector) {\n              selector[aggregation].push(fieldSelector);\n            }\n          });\n\n          return selector;\n        },\n        selectorPerField: function (field, searchString) {\n          var selector = {};\n          searchString = searchString.replace(/(\\W{1})/g, '\\\\$1');\n          selector[field] = {\n            '$regex': \".*\" + searchString + \".*\",\n            '$options': 'i'\n          };\n          return selector;\n        },\n        sort: function (searchObject, options) {\n          return options.index.fields;\n        }\n      };\n    }\n\n    return defaultMongoConfiguration;\n  }();\n  /**\n   * Return the find options for the mongo find query.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n\n\n  _proto.getFindOptions = function () {\n    function getFindOptions(searchDefinition, options) {\n      return {\n        skip: options.search.skip,\n        limit: options.search.limit,\n        disableOplog: this.config.disableOplog,\n        pollingIntervalMs: this.config.pollingIntervalMs,\n        pollingThrottleMs: this.config.pollingThrottleMs,\n        sort: this.callConfigMethod('sort', searchDefinition, options),\n        fields: this.callConfigMethod('fields', searchDefinition, options)\n      };\n    }\n\n    return getFindOptions;\n  }();\n  /**\n   * Return the reactive search cursor.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n\n\n  _proto.getSearchCursor = function () {\n    function getSearchCursor(searchDefinition, options) {\n      var selector = this.callConfigMethod('selector', searchDefinition, options, this.config.aggregation),\n          findOptions = this.getFindOptions(searchDefinition, options),\n          collection = options.index.collection;\n      check(options, Object);\n      check(selector, Object);\n      check(findOptions, Object);\n      return new Cursor(collection.find(selector, findOptions), collection.find(selector).count());\n    }\n\n    return getSearchCursor;\n  }();\n\n  return MongoDBEngine;\n}(ReactiveEngine);\n\nmodule.exportDefault(MongoDBEngine);","map":{"version":3,"sources":["packages/easysearch:core/lib/engines/mongo-db.js"],"names":["Cursor","module","watch","require","v","ReactiveEngine","MongoDBEngine","defaultConfiguration","_","defaults","defaultMongoConfiguration","engineScope","aggregation","selector","searchObject","options","each","searchString","field","fieldSelector","callConfigMethod","push","selectorPerField","replace","sort","index","fields","getFindOptions","searchDefinition","skip","search","limit","disableOplog","config","pollingIntervalMs","pollingThrottleMs","getSearchCursor","findOptions","collection","check","Object","find","count","exportDefault"],"mappings":"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","sourcesContent":["import Cursor from '../core/cursor';\nimport ReactiveEngine from '../core/reactive-engine';\n\n/**\n * The MongoDBEngine lets you search the index on the server side with MongoDB. Subscriptions and publications\n * are handled within the Engine.\n *\n * @type {MongoDBEngine}\n */\nclass MongoDBEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), super.defaultConfiguration());\n  }\n\n  /**\n   * Default mongo configuration, used in constructor and MinimongoEngine to get the configuration.\n   *\n   * @param {Object} engineScope Scope of the engine\n   *\n   * @returns {Object}\n   */\n  static defaultMongoConfiguration(engineScope) {\n    return {\n      aggregation: '$or',\n      selector(searchObject, options, aggregation) {\n        const selector = {};\n\n        selector[aggregation] = [];\n\n        _.each(searchObject, (searchString, field) => {\n          const fieldSelector = engineScope.callConfigMethod(\n            'selectorPerField', field, searchString, options\n          );\n\n          if (fieldSelector) {\n            selector[aggregation].push(fieldSelector);\n          }\n        });\n\n        return selector;\n      },\n      selectorPerField(field, searchString) {\n        const selector = {};\n\n        searchString = searchString.replace(/(\\W{1})/g, '\\\\$1');\n        selector[field] = { '$regex' : `.*${searchString}.*`, '$options' : 'i'};\n\n        return selector;\n      },\n      sort(searchObject, options) {\n        return options.index.fields;\n      }\n    };\n  }\n\n  /**\n   * Return the find options for the mongo find query.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getFindOptions(searchDefinition, options) {\n    return {\n      skip: options.search.skip,\n      limit: options.search.limit,\n      disableOplog: this.config.disableOplog,\n      pollingIntervalMs: this.config.pollingIntervalMs,\n      pollingThrottleMs: this.config.pollingThrottleMs,\n      sort: this.callConfigMethod('sort', searchDefinition, options),\n      fields: this.callConfigMethod('fields', searchDefinition, options)\n    };\n  }\n\n  /**\n   * Return the reactive search cursor.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getSearchCursor(searchDefinition, options) {\n    const selector = this.callConfigMethod(\n        'selector',\n        searchDefinition,\n        options,\n        this.config.aggregation\n      ),\n      findOptions = this.getFindOptions(searchDefinition, options),\n      collection = options.index.collection;\n\n    check(options, Object);\n    check(selector, Object);\n    check(findOptions, Object);\n\n    return new Cursor(\n      collection.find(selector, findOptions),\n      collection.find(selector).count()\n    );\n  }\n}\n\nexport default MongoDBEngine;\n"]},"sourceType":"script","hash":"9d65ff250edf542746e2250ae959971fc25c9cc6"}
