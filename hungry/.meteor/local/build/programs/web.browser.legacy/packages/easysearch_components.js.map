{"version":3,"sources":["meteor://ðŸ’»app/packages/easysearch:components/lib/base.js","meteor://ðŸ’»app/packages/easysearch:components/lib/single-index.js","meteor://ðŸ’»app/packages/easysearch:components/lib/component-methods.js","meteor://ðŸ’»app/packages/easysearch:components/lib/core.js","meteor://ðŸ’»app/packages/easysearch:components/lib/input/input.js","meteor://ðŸ’»app/packages/easysearch:components/lib/field-input/field-input.js","meteor://ðŸ’»app/packages/easysearch:components/lib/each/each.js","meteor://ðŸ’»app/packages/easysearch:components/lib/if-input-empty/if-input-empty.js","meteor://ðŸ’»app/packages/easysearch:components/lib/if-no-results/if-no-results.js","meteor://ðŸ’»app/packages/easysearch:components/lib/if-searching/if-searching.js","meteor://ðŸ’»app/packages/easysearch:components/lib/load-more/load-more.js","meteor://ðŸ’»app/packages/easysearch:components/lib/pagination/pagination.js","meteor://ðŸ’»app/packages/easysearch:components/lib/main.js"],"names":["BaseComponent","onCreated","autorun","initializeBase","index","getData","indexes","_","isEmpty","Meteor","Error","filter","EasySearch","Index","length","toString","options","defaults","omit","reserveredProperties","defaultOptions","check","name","Match","Optional","String","Object","eachIndex","getComponentDict","registerComponent","shouldShowDocuments","searchStr","noDocumentsOnEmpty","search","searchString","showDocuments","set","getComponentMethods","data","func","method","componentScope","logic","apply","BlazeComponent","SingleIndexComponent","first","dicts","_getComponentMethods","dict","searchDefinition","props","get","getCursor","Cursor","emptyCursor","cursor","searchOptions","_getSearchOptions","count","isReady","limit","skip","mongoCursor","searchIsEmpty","isString","trim","hasNoResults","isNumber","isSearching","hasMoreDocuments","loadMore","Number","currentCount","paginate","page","addProps","args","isObject","extend","removeProps","reset","arguments","components","componentName","COMPONENT_DEFAULT_NAME","ReactiveDict","config","Random","id","isValidPage","totalPagesLength","currentPage","_getPagesForPagination","totalCount","pageCount","prevAndNext","maxPages","pages","range","Math","ceil","pagesLength","startSlice","floor","endSlice","slice","pageData","map","isCurrentPage","content","current","disabled","prevPage","unshift","nextPage","push","InputComponent","inputAttributes","value","debouncedSearch","debounce","timeout","events","e","event","keyCode","$","target","val","charLimit","attributes","defaultAttributes","type","register","FieldInputComponent","field","EachComponent","doc","stopPublication","stop","dataScope","scope","IfInputEmptyComponent","inputEmpty","IfNoResultsComponent","noResults","IfSearchingComponent","searching","LoadMoreComponent","moreDocuments","PaginationComponent","transformPages","customRenderPagination","pageClasses","currentData","preventDefault","module","export"],"mappings":"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","file":"/packages/easysearch_components.js","sourcesContent":["/**\n * The BaseComponent holds the base logic for EasySearch Components.\n *\n * @type {BaseComponent}\n */\nBaseComponent = class BaseComponent extends BlazeComponent {\n  /**\n   * Return the name of the component.\n   *\n   * @returns {String}\n   */\n  get name() {\n    return this.getData().name;\n  }\n\n  /**\n   * Return an array of properties that are reserved to the base component.\n   *\n   * @returns {String[]}\n   */\n  static get reserveredProperties() {\n    return ['index', 'indexes', 'name', 'attributes'];\n  }\n\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    this.autorun(() => this.initializeBase());\n  }\n\n  initializeBase() {\n    let index = this.getData().index,\n      indexes = [index];\n\n    if (!index) {\n      indexes = this.getData().indexes;\n    }\n\n    if (_.isEmpty(indexes)) {\n      throw new Meteor.Error('no-index', 'Please provide an index for your component');\n    }\n\n    if (indexes.filter((index) => index instanceof EasySearch.Index).length !== indexes.length) {\n      throw new Meteor.Error(\n        'invalid-configuration',\n        `Did not receive an index or an array of indexes: \"${indexes.toString()}\"`\n      );\n    }\n\n    this.indexes = indexes;\n    this.options = _.defaults({}, _.omit(this.getData(), ...BaseComponent.reserveredProperties), this.defaultOptions);\n\n    check(this.name, Match.Optional(String));\n    check(this.options, Object);\n\n    this.eachIndex(function (index, name) {\n      if (!index.getComponentDict(name)) {\n        index.registerComponent(name);\n      }\n    });\n  }\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  get defaultOptions () {\n    return {};\n  }\n\n  /**\n   * @param {String} searchStr\n   *\n   * @returns {Boolean}\n   */\n  shouldShowDocuments(searchStr) {\n    return !this.getData().noDocumentsOnEmpty || 0 < searchStr.length;\n  }\n\n  /**\n   * Search the component.\n   *\n   * @param {String} searchString String to search for\n   */\n  search(searchString) {\n    check(searchString, String);\n\n    const showDocuments = this.shouldShowDocuments(searchString);\n\n    this.eachIndex(function (index, name) {\n      index.getComponentDict(name).set('showDocuments', showDocuments);\n\n      if (showDocuments) {\n        index.getComponentMethods(name).search(searchString);\n      }\n    });\n  }\n\n  /**\n   * Return the data.\n   *\n   * @returns {Object}\n   */\n  getData() {\n    return (this.data() || {});\n  }\n\n  /**\n   * Return the dictionaries.\n   *\n   * @returns {Object}\n   */\n  get dicts() {\n    return this.eachIndex((index, name) => {\n      return index.getComponentDict(name);\n    }, 'map');\n  }\n\n  /**\n   * Loop through each index and apply a function\n   *\n   * @param {Function} func   Function to run\n   * @param {String}   method Lodash method name\n   *\n   * @return mixed\n   */\n  eachIndex(func, method = 'each') {\n    let componentScope = this,\n      logic = this.getData().logic;\n\n    if (!_.isEmpty(logic)) {\n      method = 'OR' === logic ? 'some' : 'every';\n    }\n\n    return _[method](this.indexes, function (index) {\n      return func.apply(this, [index, componentScope.name]);\n    });\n  }\n};\n\nEasySearch.BaseComponent = BaseComponent;\n","/**\n * The SingleIndexComponent holds logic for components that only can use one index.\n *\n * @type {SingleIndexComponent}\n */\nSingleIndexComponent = class SingleIndexComponent extends BaseComponent {\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    super.onCreated();\n\n    if (this.indexes.length > 1) {\n      throw new Meteor.Error('only-single-index', 'Can only specify one index');\n    }\n  }\n\n  /**\n   * Return the index\n   *\n   * @returns {Index}\n   */\n  get index() {\n    return _.first(this.indexes);\n  }\n\n  /**\n   * Return the dictionary.\n   *\n   * @returns {Object}\n   */\n  get dict() {\n    return _.first(this.dicts);\n  }\n};\n\nEasySearch.SingleIndexComponent = SingleIndexComponent;\n","EasySearch._getComponentMethods = function (dict, index) {\n  return {\n    /**\n     * Search a component for the given search string.\n     *\n     * @param {Object|String} searchDefinition Search definition\n     */\n    search: (searchDefinition) => {\n      dict.set('searchOptions', {\n        props: (dict.get('searchOptions') || {}).props\n      });\n\n      dict.set('searchDefinition', searchDefinition);\n      dict.set('stopPublication', true);\n    },\n    /**\n     * Return the EasySearch.Cursor for the current search.\n     *\n     * @returns {Cursor}\n     */\n    getCursor: () => {\n      const searchDefinition = dict.get('searchDefinition') || '',\n        options = dict.get('searchOptions') || {},\n        showDocuments = dict.get('showDocuments');\n\n      check(options, Match.Optional(Object));\n\n      if (false === showDocuments) {\n        dict.set('count', 0);\n        dict.set('searching', false);\n        dict.set('limit', 0);\n        dict.set('skip', 0);\n        dict.set('currentCount', 0);\n        dict.set('stopPublication', false);\n\n        return EasySearch.Cursor.emptyCursor;\n      }\n\n      const cursor = index.search(searchDefinition, options),\n        searchOptions = index._getSearchOptions(options);\n\n      dict.set('count', cursor.count());\n      dict.set('searching', !cursor.isReady());\n      dict.set('limit', searchOptions.limit);\n      dict.set('skip', searchOptions.skip);\n      dict.set('currentCount', cursor.mongoCursor.count());\n      dict.set('stopPublication', false);\n\n      return cursor;\n    },\n    /**\n     * Return true if the current search string is empty.\n     *\n     * @returns {boolean}\n     */\n    searchIsEmpty: () => {\n      let searchDefinition = dict.get('searchDefinition');\n\n      return !searchDefinition || (_.isString(searchDefinition) && 0 === searchDefinition.trim().length);\n    },\n    /**\n     * Return true if the component has no results.\n     *\n     * @returns {boolean}\n     */\n    hasNoResults: () => {\n      let count = dict.get('count'),\n        showDocuments = dict.get('showDocuments');\n\n      return false !== showDocuments\n        && !dict.get('searching')\n        && (!_.isNumber(count) || 0 === count);\n    },\n    /**\n     * Return true if the component is being searched.\n     *\n     * @returns {boolean}\n     */\n    isSearching: () => {\n      return !!dict.get('searching');\n    },\n    /**\n     * Return true if the component has more documents than displayed right now.\n     *\n     * @returns {boolean}\n     */\n    hasMoreDocuments: () => {\n      return dict.get('currentCount') < dict.get('count');\n    },\n    /**\n     * Load more documents for the component.\n     *\n     * @param {Number} count Count of docs\n     */\n    loadMore: (count) => {\n      check(count, Number);\n\n      let currentCount = dict.get('currentCount'),\n        options = dict.get('searchOptions') || {};\n\n      options.limit = currentCount + count;\n      dict.set('searchOptions', options);\n    },\n    /**\n     * Paginate through documents for the given page.\n     *\n     * @param {Number} page Page number\n     */\n    paginate: (page) => {\n      check(page, Number);\n\n      let options = dict.get('searchOptions') || {},\n        limit = dict.get('limit');\n\n      options.skip = limit * (page - 1);\n      dict.set('currentPage', page);\n      dict.set('searchOptions', options);\n      dict.set('stopPublication', true);\n    },\n    /**\n     * Add custom properties for search.\n     */\n    addProps(...args) {\n      let options = dict.get('searchOptions') || {};\n\n      options.props = options.props || {};\n\n      if (_.isObject(args[0])) {\n        options.props = _.extend(options.props, args[0]);\n      } else if (_.isString(args[0])) {\n        options.props[args[0]] = args[1];\n      }\n\n      dict.set('searchOptions', options);\n      this.paginate(1);\n    },\n    /**\n     * Remove custom properties for search.\n     */\n    removeProps(...args) {\n      let options = dict.get('searchOptions') || {};\n\n      if (!_.isEmpty(args)) {\n        options.props = _.omit(options.props, args) || {};\n      } else {\n        options.props = {};\n      }\n\n      dict.set('searchOptions', options);\n      this.paginate(1);\n    },\n    /**\n     * Reset the search.\n     */\n    reset() {\n      this.search('');\n      this.paginate(1);\n      dict.set('searchOptions', {});\n    },\n  };\n};\n","/**\n * Extend EasySearch.Index with component functionality.\n *\n * @type {Index}\n */\nEasySearch.Index = class Index extends EasySearch.Index {\n  /**\n   * Constructor.\n   */\n  constructor() {\n    super(...arguments);\n    this.components = {};\n  }\n\n  /**\n   * Return static default name for components.\n   *\n   * @returns {String}\n   */\n  static get COMPONENT_DEFAULT_NAME() {\n    return'__default';\n  }\n\n  /**\n   * Register a component on the index.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n  registerComponent(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    this.components[componentName] = new ReactiveDict(\n      `easySearchComponent_${this.config.name}_${componentName}_${Random.id()}`\n    );\n  }\n\n  /**\n   * Get the reactive dictionary for a component.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n  getComponentDict(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    return this.components[componentName];\n  }\n\n  /**\n   * Get component methods that are useful for implementing search behaviour.\n   *\n   * @param componentName\n   */\n  getComponentMethods(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    let dict = this.getComponentDict(componentName);\n\n    if (!dict) {\n      throw new Meteor.Error('no-component', `Component with name '${componentName}' not found`);\n    }\n\n    return EasySearch._getComponentMethods(dict, this);\n  }\n};\n\n/**\n * Return true if the current page is valid.\n *\n * @param {Number} totalPagesLength Count of all pages available\n * @param {Number} currentPage      Current page to check\n *\n * @returns {boolean}\n */\nfunction isValidPage(totalPagesLength, currentPage) {\n  return currentPage <= totalPagesLength && currentPage > 0;\n}\n\n/**\n * Helper method to get the pages for pagination as an array.\n *\n * @param totalCount   Total count of results\n * @param pageCount    Count of results per page\n * @param currentPage  Current page\n * @param prevAndNext  True if Next and Previous buttons should appear\n * @param maxPages     Maximum count of pages to show\n *\n * @private\n *\n * @returns {Array}\n */\nEasySearch._getPagesForPagination = function ({totalCount, pageCount, currentPage, prevAndNext, maxPages}) {\n  let pages = _.range(1, Math.ceil(totalCount / pageCount) + 1),\n    pagesLength = pages.length;\n\n  if (!isValidPage(pagesLength, currentPage)) {\n    throw new Meteor.Error('invalid-page', 'Current page is not in valid range');\n  }\n\n  if (maxPages) {\n    let startSlice = (currentPage > (maxPages / 2) ? (currentPage - 1) - Math.floor(maxPages / 2) : 0),\n      endSlice = startSlice + maxPages;\n\n    if (endSlice > pagesLength) {\n      pages = pages.slice(-maxPages);\n    } else {\n      pages = pages.slice(startSlice, startSlice + maxPages);\n    }\n  }\n\n  let pageData = _.map(pages, function (page) {\n    let isCurrentPage = page === currentPage;\n    return { page, content: page.toString(), current: isCurrentPage, disabled: isCurrentPage };\n  });\n\n  if (prevAndNext) {\n    // Previous\n    let prevPage = isValidPage(pagesLength, currentPage - 1) ? currentPage - 1 : null;\n    pageData.unshift({ page: prevPage, content: 'Prev', current: false, disabled: 1 === currentPage });\n    // Next\n    let nextPage = isValidPage(pagesLength, currentPage + 1) ? currentPage + 1 : null;\n    pageData.push(\n      { page: nextPage, content: 'Next', current: false, disabled: null == nextPage || pagesLength + 1 === currentPage }\n    );\n  }\n\n  return pageData;\n};\n","/**\n * The InputComponent lets you search through configured indexes.\n *\n * @type {InputComponent}\n */\nEasySearch.InputComponent = class InputComponent extends BaseComponent {\n  /**\n   * Setup input onCreated.\n   */\n  onCreated() {\n    super.onCreated(...arguments);\n\n    this.search(this.inputAttributes().value);\n\n    // create a reactive dependency to the cursor\n    this.debouncedSearch = _.debounce((searchString) => {\n      searchString = searchString.trim();\n\n      if (this.searchString !== searchString) {\n        this.searchString = searchString;\n\n        this.eachIndex((index, name) => {\n          index.getComponentDict(name).set('currentPage', 1);\n        });\n\n        this.search(searchString);\n      }\n\n    }, this.options.timeout);\n  }\n\n  /**\n   * Event map.\n   *\n   * @returns {Object}\n   */\n  events() {\n    return [{\n      'keyup input' : function (e) {\n        if ('enter' == this.getData().event && e.keyCode != 13) {\n          return;\n        }\n\n        const value = $(e.target).val();\n\n        if (value.length >= this.options.charLimit) {\n          this.debouncedSearch($(e.target).val());\n        }\n      }\n    }];\n  }\n\n  /**\n   * Return the attributes to set on the input (class, id).\n   *\n   * @returns {Object}\n   */\n  inputAttributes() {\n    return _.defaults({}, this.getData().attributes, InputComponent.defaultAttributes);\n  }\n\n  /**\n   * Return the default attributes.\n   *\n   * @returns {Object}\n   */\n  static get defaultAttributes() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  get defaultOptions() {\n    return {\n      timeout: 50,\n      charLimit: 0\n    };\n  }\n};\n\nEasySearch.InputComponent.register('EasySearch.Input');\n","/**\n * The FieldInputComponent lets you search through configured indexes for a specified fild.\n *\n * @type {FieldInputComponent}\n */\nEasySearch.FieldInputComponent = class FieldInputComponent extends EasySearch.InputComponent {\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    super.onCreated();\n\n    if (_.isEmpty(this.getData().field)) {\n      throw new Meteor.Error('no-field', 'Please provide a field for your field input component');\n    }\n  }\n\n  /**\n   * Search the component.\n   *\n   * @param {String} searchString String to search for\n   */\n  search(searchString) {\n    check(searchString, String);\n\n    this.eachIndex((index, name) => {\n      let searchDefinition = index.getComponentDict(name).get('searchDefinition') || {};\n\n      if (_.isString(searchDefinition)) {\n        throw new Meteor.Error('You can either EasySearch.FieldInput or EasySearch.Input');\n      }\n\n      if (this.options.field) {\n        searchDefinition[this.options.field] = searchString;\n        index.getComponentMethods(name).search(searchDefinition);\n      }\n    });\n  }\n};\n\nEasySearch.FieldInputComponent.register('EasySearch.FieldInput');\n","/**\n * The EachComponent allows to loop through the search results found.\n *\n * @type {EachComponent}\n */\nEasySearch.EachComponent = class EachComponent extends SingleIndexComponent {\n  /**\n   * Return the mongo cursor for the search.\n   *\n   * @returns {Mongo.Cursor}\n   */\n  doc() {\n    const stopPublication = this.index\n      .getComponentDict(this.name)\n      .get('stopPublication')\n    ;\n\n    this.cursor && stopPublication && this.cursor.stop();\n\n    this.cursor = this.index\n        .getComponentMethods(this.name)\n        .getCursor()\n    ;\n\n    return this.cursor.mongoCursor;\n  }\n\n  /**\n   * Return the datascope for each document.\n   *\n   * @param {Object} scope\n   * @param {Number} index\n   *\n   * @returns {Object}\n   */\n  dataScope(scope, index) {\n    scope['@index'] = index\n\n    return scope\n  }\n};\n\nEasySearch.EachComponent.register('EasySearch.Each');\n","/**\n * The IfInputEmptyComponent lets you display content when the input is empty.\n *\n * @type {IfInputEmptyComponent}\n */\nEasySearch.IfInputEmptyComponent = class IfInputEmptyComponent extends BaseComponent {\n  /**\n   * Return true if the input is empty.\n   *\n   * @returns {boolean}\n   */\n  inputEmpty() {\n    return !!this.eachIndex(function (index, name) {\n      return index.getComponentMethods(name).searchIsEmpty();\n    }, 'every');\n  }\n};\n\nEasySearch.IfInputEmptyComponent.register('EasySearch.IfInputEmpty');\n","/**\n * The IfNoResultsComponent lets you display content when there are no results.\n *\n * @type {IfNoResultsComponent}\n */\nEasySearch.IfNoResultsComponent = class IfNoResultsComponent extends BaseComponent {\n  /**\n   * Return true if there are no results.\n   *\n   * @returns {boolean}\n   */\n  noResults() {\n    return !!this.eachIndex(function (index, name) {\n      return index.getComponentMethods(name).hasNoResults();\n    }, 'every');\n  }\n};\n\nEasySearch.IfNoResultsComponent.register('EasySearch.IfNoResults');\n","/**\n * The IfSearchingComponent lets you display content when the component is being searched.\n *\n * @type {IfSearchingComponent}\n */\nEasySearch.IfSearchingComponent = class IfSearchingComponent extends BaseComponent {\n  /**\n   * Return true if the component is being searched.\n   *\n   * @returns {boolean}\n   */\n  searching() {\n    return !!this.eachIndex(function (index, name) {\n      return index.getComponentMethods(name).isSearching();\n    }, 'every');\n  }\n};\n\nEasySearch.IfSearchingComponent.register('EasySearch.IfSearching');\n","/**\n * The LoadMoreComponent lets you load more documents through a button.\n *\n * @type {LoadMoreComponent}\n */\nEasySearch.LoadMoreComponent = class LoadMoreComponent extends SingleIndexComponent {\n  /**\n   * Load more documents.\n   */\n  loadMore() {\n    this.index\n      .getComponentMethods(this.name)\n      .loadMore(this.options.count)\n    ;\n  }\n\n  /**\n   * Content of the component.\n   *\n   * @returns string\n   */\n  content() {\n    return this.options.content;\n  }\n\n  /**\n   * Attributes of the component.\n   *\n   * @returns string\n   */\n  attributes() {\n    return this.getData().attributes || {};\n  }\n\n  /**\n   * Return true if there are more documents to load.\n   *\n   * @returns {Boolean}\n   */\n  moreDocuments() {\n    return this.index.getComponentMethods(this.name).hasMoreDocuments();\n  }\n\n  /**\n   * Event map.\n   *\n   * @returns {Object}\n   */\n  events() {\n    return [{\n      'click button' : function () {\n        this.loadMore();\n      }\n    }];\n  }\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  get defaultOptions() {\n    return {\n      content: 'Load more',\n      count: 10\n    };\n  }\n};\n\nEasySearch.LoadMoreComponent.register('EasySearch.LoadMore');\n","/**\n * The PaginationComponent lets you paginate through documents.\n *\n * @type {PaginationComponent}\n */\nEasySearch.PaginationComponent = class PaginationComponent extends SingleIndexComponent {\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    super.onCreated();\n    this.index.getComponentMethods(this.name).paginate(1);\n  }\n\n  /**\n   * Get pages for displaying the pagination.\n   *\n   * @returns {Array}\n   */\n  page() {\n    let totalCount = this.dict.get('count'),\n      pageCount = this.dict.get('limit'),\n      currentPage = this.dict.get('currentPage'),\n      maxPages = this.options.maxPages,\n      prevAndNext = this.options.prevAndNext;\n\n    if (!pageCount || !totalCount) {\n      return [];\n    }\n\n    return this.options.transformPages(\n      EasySearch._getPagesForPagination(\n        {\n          totalCount,\n          pageCount,\n          currentPage,\n          maxPages,\n          prevAndNext\n        }\n    ));\n  }\n\n  customRenderPagination() {\n    return this.getData().customRenderPagination;\n  }\n\n  /**\n   * Paginate documents.\n   */\n  paginate(page) {\n    check(page, Number);\n\n    this.index.getComponentMethods(this.name).paginate(page);\n  }\n\n  /**\n   * Return page classes.\n   *\n   * @param {Object} data Data for the current page\n   *\n   * @returns {String}\n   */\n  pageClasses(data) {\n    return `${(data.disabled ? 'disabled' : '' )} ${(data.current ? 'current' : '' )}`.trim();\n  }\n\n  /**\n   * Return true if there are more documents to load.\n   *\n   * @returns {Boolean}\n   */\n  moreDocuments() {\n    return this.index.getComponentMethods(this.name).hasMoreDocuments();\n  }\n\n  /**\n   * Event map.\n   *\n   * @returns {Object}\n   */\n  events() {\n    return [{\n      'click .page:not(.disabled)' : function (e) {\n        let currentPage = this.currentData().page;\n        this.dict.set('currentPage', currentPage);\n        this.paginate(currentPage);\n\n        e.preventDefault();\n      }\n    }];\n  }\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  get defaultOptions() {\n    return {\n      prevAndNext: true,\n      maxPages: null,\n      transformPages: (pages) => pages\n    };\n  }\n};\n\nEasySearch.PaginationComponent.register('EasySearch.Pagination');\n","const {\n  Index,\n  SingleIndexComponent,\n  BaseComponent,\n  FieldInputComponent,\n  EachComponent,\n  IfInputEmptyComponent,\n  IfNoResultsComponent,\n  IfSearchingComponent,\n  InputComponent,\n  LoadMoreComponent,\n  PaginationComponent,\n} = EasySearch;\n\nexport {\n  Index,\n  SingleIndexComponent,\n  BaseComponent,\n  FieldInputComponent,\n  EachComponent,\n  IfInputEmptyComponent,\n  IfNoResultsComponent,\n  IfSearchingComponent,\n  InputComponent,\n  LoadMoreComponent,\n  PaginationComponent,\n};\n"]}