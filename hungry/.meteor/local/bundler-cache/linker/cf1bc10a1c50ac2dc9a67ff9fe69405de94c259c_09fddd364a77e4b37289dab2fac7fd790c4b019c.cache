[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nEasySearch = Package['easy:search'].EasySearch;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"collections\":{\"recipes.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////\n//                                                                    //\n// imports/collections/recipes.js                                     //\n//                                                                    //\n////////////////////////////////////////////////////////////////////////\n                                                                      //\nmodule.export({\n  Recipes: () => Recipes\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.watch(require(\"simpl-schema\"), {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nSimpleSchema.extendOptions(['autoform']);\nconst Recipes = new Mongo.Collection('recipes');\nRecipes.attachSchema(new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Name\"\n  },\n  difficulty: {\n    type: String,\n    label: \"Difficulty\",\n    autoform: {\n      options: [{\n        label: \"basic\",\n        value: 1\n      }, {\n        label: \"easy\",\n        value: 2\n      }, {\n        label: \"moderate\",\n        value: 3\n      }, {\n        label: \"intermediate\",\n        value: 4\n      }, {\n        label: \"hard\",\n        value: 5\n      }]\n    }\n  },\n  course: {\n    type: String,\n    label: \"Course\"\n  },\n  createdOn: {\n    type: Date,\n    label: \"Created On\",\n    autoValue: function () {\n      return new Date();\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  createdBy: {\n    type: String,\n    label: \"Created By\"\n  },\n  duration: {\n    type: String,\n    label: \"Duration\"\n  },\n  servings: {\n    type: String,\n    label: \"Servings\"\n  },\n  ingredients: {\n    type: Array,\n    label: \"Ingredients\",\n    minCount: 1\n  },\n  'ingredients.$': {\n    type: Object\n  },\n  'ingredients.$.name': {\n    type: String\n  },\n  'ingredients.$.amount': {\n    type: String\n  },\n  festive: {\n    type: String,\n    label: \"Festive Tags\",\n    autoform: {\n      options: [{\n        label: \"None\",\n        value: \"none\"\n      }, {\n        label: \"Chinese New Year\",\n        value: \"chinese-new-year\"\n      }, {\n        label: \"Vesak Day\",\n        value: \"vesak-day\"\n      }, {\n        label: \"Hari Raya Puasa\",\n        value: \"hari-raya-puasa\"\n      }, {\n        label: \"Deepavali\",\n        value: \"deepavali\"\n      }, {\n        label: \"Christmas\",\n        value: \"christmas\"\n      }, {\n        label: \"Mid-autumn festival\",\n        value: \"mid-autumn-festival\"\n      }]\n    }\n  },\n  instructions: {\n    type: String,\n    label: \"Instructions\",\n    autoform: {\n      type: 'textarea',\n      rows: 5,\n      cols: 90\n    }\n  },\n  dietary: {\n    type: Array,\n    label: \"Dietary Tags\"\n  },\n  'dietary.$': {\n    type: String\n  }\n}));\nRecipes.allow({\n  insert: function () {\n    return true;\n  }\n});\n////////////////////////////////////////////////////////////////////////\n\n}},\"functions\":{\"ShoppingList.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////\n//                                                                    //\n// imports/functions/ShoppingList.js                                  //\n//                                                                    //\n////////////////////////////////////////////////////////////////////////\n                                                                      //\nlet Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template(v) {\n    Template = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet LocalPersist;\nmodule.watch(require(\"meteor/jeffm:local-persist\"), {\n  LocalPersist(v) {\n    LocalPersist = v;\n  }\n\n}, 2);\n\nif (Meteor.isClient) {\n  var Ingredients = new Meteor.Collection(null);\n  var shoppingCart = new LocalPersist(Ingredients, 'shopping-cart', {\n    maxDocuments: 199,\n    storageFull: function (col, doc) {\n      col.remove({\n        _id: doc._id\n      });\n      alert('Shopping List is full.');\n    }\n  });\n  UI.registerHelper(\"Items\", function () {\n    return Ingredients.find();\n  });\n  Template.ShoppingList.events({\n    'submit.new-ingredient'(event) {\n      event.preventDefault();\n      const target = event.target;\n      const text = target.text.value;\n      Ingredients.insert({\n        text\n      });\n      target.text.value = '';\n    }\n\n  });\n  Template.ingredient.events({\n    // 'click.toggle-checked'() {\n    //     Ingredients.update(this._id, {\n    //         $set: { checked: !this.checked },\n    //     });\n    // }, to include a checkbox\n    'click.delete'() {\n      Ingredients.remove(this._id);\n      Ingredients.update();\n    }\n\n  });\n}\n////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////\n//                                                                    //\n// server/main.js                                                     //\n//                                                                    //\n////////////////////////////////////////////////////////////////////////\n                                                                      //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Recipes;\nmodule.watch(require(\"../imports/collections/recipes.js\"), {\n  Recipes(v) {\n    Recipes = v;\n  }\n\n}, 1);\nmodule.watch(require(\"../imports/collections/recipes.js\"));\nmodule.watch(require(\"../imports/functions/ShoppingList.js\"));\nMeteor.startup(function () {});\nMeteor.publish('recipes', function () {\n  return Recipes.find();\n});\nMeteor.publish('singleRecipe', function (id) {\n  return Recipes.find({\n    _id: id\n  });\n});\n////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nvar exports = require(\"/server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/collections/recipes.js","imports/functions/ShoppingList.js","server/main.js"],"names":["module","export","Recipes","Mongo","watch","require","v","SimpleSchema","default","extendOptions","Collection","attachSchema","name","type","String","label","difficulty","autoform","options","value","course","createdOn","Date","autoValue","createdBy","duration","servings","ingredients","Array","minCount","Object","festive","instructions","rows","cols","dietary","allow","insert","Template","Meteor","LocalPersist","isClient","Ingredients","shoppingCart","maxDocuments","storageFull","col","doc","remove","_id","alert","UI","registerHelper","find","ShoppingList","events","event","preventDefault","target","text","ingredient","update","startup","publish","id"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\nimport SimpleSchema from 'simpl-schema';\r\nSimpleSchema.extendOptions(['autoform']);\r\n\r\nexport const Recipes = new Mongo.Collection('recipes');\r\n\r\nRecipes.attachSchema(new SimpleSchema({    \r\n    name: {\r\n        type: String,\r\n        label: \"Name\",\r\n    },\r\n    difficulty: {\r\n        type: String,\r\n        label: \"Difficulty\",\r\n        autoform : {\r\n            options: [\r\n                {\r\n                    label: \"basic\",\r\n                    value: 1,\r\n                },\r\n                {\r\n                    label: \"easy\",\r\n                    value: 2,\r\n                },\r\n                {\r\n                    label: \"moderate\",\r\n                    value: 3,\r\n                },\r\n                {\r\n                    label: \"intermediate\",\r\n                    value: 4,\r\n                },\r\n                {\r\n                    label: \"hard\",\r\n                    value: 5,\r\n                },\r\n            ]\r\n        }\r\n    },\r\n    course: {\r\n        type: String,\r\n        label: \"Course\",\r\n    },\r\n    createdOn: {\r\n        type: Date,\r\n        label: \"Created On\",\r\n        autoValue: function() { return new Date();\r\n        },\r\n        autoform: {\r\n            type: \"hidden\",\r\n        },\r\n    },\r\n    createdBy: {\r\n        type: String,\r\n        label: \"Created By\",\r\n    },\r\n    duration: {\r\n        type: String,\r\n        label: \"Duration\",\r\n    },\r\n    servings: {\r\n        type: String,\r\n        label: \"Servings\",\r\n    },\r\n    ingredients: {\r\n        type: Array,\r\n        label: \"Ingredients\",\r\n        minCount: 1,\r\n    },\r\n    'ingredients.$': {\r\n        type: Object,\r\n    },\r\n    'ingredients.$.name': {\r\n        type: String,\r\n    },\r\n    'ingredients.$.amount': {\r\n        type: String,\r\n    },\r\n    festive: {\r\n        type: String,\r\n        label: \"Festive Tags\",\r\n        autoform : {\r\n            options: [\r\n                {\r\n                    label: \"None\",\r\n                    value: \"none\",\r\n                },\r\n                {\r\n                    label: \"Chinese New Year\",\r\n                    value: \"chinese-new-year\",\r\n                },\r\n                {\r\n                    label: \"Vesak Day\",\r\n                    value: \"vesak-day\",\r\n                },\r\n                {\r\n                    label: \"Hari Raya Puasa\",\r\n                    value: \"hari-raya-puasa\",\r\n                },\r\n                {\r\n                    label: \"Deepavali\",\r\n                    value: \"deepavali\",\r\n                },\r\n                {\r\n                    label: \"Christmas\",\r\n                    value: \"christmas\",\r\n                },\r\n                {\r\n                    label: \"Mid-autumn festival\",\r\n                    value: \"mid-autumn-festival\",\r\n                },\r\n            ]\r\n        }\r\n    },\r\n    instructions: {\r\n        type: String,\r\n        label: \"Instructions\",\r\n        autoform: {\r\n            type: 'textarea',\r\n            rows: 5,\r\n            cols: 90,\r\n        },\r\n    },\r\n    dietary: {\r\n        type: Array,\r\n        label: \"Dietary Tags\",\r\n    },\r\n    'dietary.$': {\r\n        type: String,\r\n    },\r\n}));\r\n\r\n\r\n\r\nRecipes.allow({\r\n    insert: function () {\r\n        return true;\r\n      },\r\n});\r\n","import { Template } from 'meteor/templating';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { LocalPersist } from 'meteor/jeffm:local-persist';\r\n\r\nif (Meteor.isClient) { \r\n    var Ingredients = new Meteor.Collection(null);\r\n\r\n    var shoppingCart = new LocalPersist(Ingredients, 'shopping-cart', \r\n    {\r\n        maxDocuments: 199,\r\n        storageFull: function (col, doc) {\r\n            col.remove({ _id: doc._id });\r\n            alert('Shopping List is full.');\r\n        }\r\n    });\r\n\r\n    UI.registerHelper(\"Items\", function () {\r\n        return Ingredients.find();\r\n    });\r\n\r\n    Template.ShoppingList.events({\r\n        'submit.new-ingredient'(event) {\r\n            event.preventDefault();\r\n    \r\n            const target = event.target;\r\n            const text = target.text.value;\r\n    \r\n            Ingredients.insert({\r\n                text,\r\n            });\r\n    \r\n            target.text.value='';\r\n        },\r\n    });\r\n\r\n    Template.ingredient.events({\r\n        // 'click.toggle-checked'() {\r\n        //     Ingredients.update(this._id, {\r\n        //         $set: { checked: !this.checked },\r\n        //     });\r\n        // }, to include a checkbox\r\n    \r\n        'click.delete'() {\r\n            Ingredients.remove(this._id);\r\n            Ingredients.update();\r\n        },\r\n    });\r\n}\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { Recipes } from '../imports/collections/recipes.js';\r\n\r\nimport '../imports/collections/recipes.js'\r\nimport '../imports/functions/ShoppingList.js';\r\n\r\nMeteor.startup(function() {\r\n});\r\n\r\nMeteor.publish('recipes', function() {\r\n  return Recipes.find();\r\n});\r\n\r\nMeteor.publish('singleRecipe', function(id) {\r\n  return Recipes.find({_id: id});\r\n});\r\n"]}}]