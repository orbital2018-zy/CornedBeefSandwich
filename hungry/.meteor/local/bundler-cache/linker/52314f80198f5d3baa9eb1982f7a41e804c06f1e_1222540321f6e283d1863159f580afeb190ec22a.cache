[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Mongo = Package.mongo.Mongo;\nvar _ = Package.underscore._;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar EasySearch;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"easysearch:core\":{\"lib\":{\"core\":{\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/core/index.js                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Engine;\nmodule.watch(require(\"./engine\"), {\n  \"default\": function (v) {\n    Engine = v;\n  }\n}, 1);\n\n/**\n * An Index represents the main entry point for searching with EasySearch. It relies on\n * the given engine to have the search functionality and defines the data that should be searchable.\n *\n * @type {Index}\n */\nvar Index =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  function Index(config) {\n    check(config, Object);\n    check(config.fields, [String]);\n    if (!config.ignoreCollectionCheck) check(config.collection, Mongo.Collection);\n\n    if (!(config.engine instanceof Engine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof Engine');\n    }\n\n    if (!config.name) config.name = (config.collection._name || '').toLowerCase();\n    this.config = _.extend(Index.defaultConfiguration, config);\n    this.defaultSearchOptions = _.defaults({}, this.config.defaultSearchOptions, {\n      limit: 10,\n      skip: 0,\n      props: {}\n    }); // Engine specific code on index creation\n\n    config.engine.onIndexCreate(this.config);\n  }\n  /**\n   * Default configuration for an index.\n   *\n   * @returns {Object}\n   */\n\n\n  var _proto = Index.prototype;\n\n  /**\n   * Search the index.\n   *\n   * @param {Object|String} searchDefinition Search definition\n   * @param {Object}        options          Options\n   *\n   * @returns {Cursor}\n   */\n  _proto.search = function () {\n    function search(searchDefinition) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.config.engine.checkSearchParam(searchDefinition, this.config);\n      check(options, {\n        limit: Match.Optional(Number),\n        skip: Match.Optional(Number),\n        props: Match.Optional(Object),\n        userId: Match.Optional(Match.OneOf(String, null))\n      });\n      options = {\n        search: this._getSearchOptions(options),\n        index: this.config\n      };\n\n      if (!this.config.permission(options.search)) {\n        throw new Meteor.Error('not-allowed', \"Not allowed to search this index!\");\n      }\n\n      return this.config.engine.search(searchDefinition, options);\n    }\n\n    return search;\n  }();\n  /**\n   * Returns the search options based on the given options.\n   *\n   * @param {Object} options Options to use\n   *\n   * @returns {Object}\n   */\n\n\n  _proto._getSearchOptions = function () {\n    function _getSearchOptions(options) {\n      if (!Meteor.isServer) {\n        delete options.userId;\n      }\n\n      if (typeof options.userId === \"undefined\" && Meteor.userId) {\n        options.userId = Meteor.userId();\n      }\n\n      return _.defaults(options, this.defaultSearchOptions);\n    }\n\n    return _getSearchOptions;\n  }();\n\n  (0, _createClass2.default)(Index, null, [{\n    key: \"defaultConfiguration\",\n    get: function () {\n      return {\n        permission: function () {\n          return true;\n        },\n        defaultSearchOptions: {},\n        countUpdateIntervalMs: 2000\n      };\n    }\n  }]);\n  return Index;\n}();\n\nmodule.exportDefault(Index);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"engine.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/core/engine.js                                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * An Engine is the technology used for searching with EasySearch, with\n * customizable configuration to how it interacts with the data from the Index.\n *\n * @type {Engine}\n */\nvar Engine =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param {Object} config configuration\n   *\n   * @constructor\n   */\n  function Engine() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (this.constructor === Engine) {\n      throw new Error('Cannot initialize instance of Engine');\n    }\n\n    if (!_.isFunction(this.search)) {\n      throw new Error('Engine needs to implement search method');\n    }\n\n    this.config = _.defaults({}, config, this.defaultConfiguration());\n  }\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n\n\n  var _proto = Engine.prototype;\n\n  _proto.defaultConfiguration = function () {\n    function defaultConfiguration() {\n      return {};\n    }\n\n    return defaultConfiguration;\n  }();\n  /**\n   * Call a configuration method with the engine scope.\n   *\n   * @param {String} methodName Method name\n   * @param {Object} args       Arguments for the method\n   *\n   * @returns {*}\n   */\n\n\n  _proto.callConfigMethod = function () {\n    function callConfigMethod(methodName) {\n      check(methodName, String);\n      var func = this.config[methodName];\n\n      if (func) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        return func.apply(this, args);\n      }\n    }\n\n    return callConfigMethod;\n  }();\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n\n\n  _proto.checkSearchParam = function () {\n    function checkSearchParam(search) {\n      check(search, String);\n    }\n\n    return checkSearchParam;\n  }();\n  /**\n   *Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuraction\n   */\n\n\n  _proto.onIndexCreate = function () {\n    function onIndexCreate(indexConfig) {\n      if (!indexConfig.allowedFields) {\n        indexConfig.allowedFields = indexConfig.fields;\n      }\n    }\n\n    return onIndexCreate;\n  }();\n\n  return Engine;\n}();\n\nmodule.exportDefault(Engine);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reactive-engine.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/core/reactive-engine.js                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar SearchCollection;\nmodule.watch(require(\"./search-collection\"), {\n  \"default\": function (v) {\n    SearchCollection = v;\n  }\n}, 0);\nvar Engine;\nmodule.watch(require(\"./engine\"), {\n  \"default\": function (v) {\n    Engine = v;\n  }\n}, 1);\n\n/**\n * A ReactiveEngine handles the reactive logic, such as subscribing\n * and publishing documents into a self contained collection.\n *\n * @type {ReactiveEngine}\n */\nvar ReactiveEngine =\n/*#__PURE__*/\nfunction (_Engine) {\n  (0, _inheritsLoose2.default)(ReactiveEngine, _Engine);\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  function ReactiveEngine(config) {\n    var _this;\n\n    _this = _Engine.call(this, config) || this;\n\n    if ((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)) === _this.constructor) {\n      throw new Error('Cannot initialize instance of ReactiveEngine');\n    }\n\n    if (!_.isFunction(_this.getSearchCursor)) {\n      throw new Error('Reactive engine needs to implement getSearchCursor method');\n    }\n\n    return _this;\n  }\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n\n\n  var _proto = ReactiveEngine.prototype;\n\n  _proto.defaultConfiguration = function () {\n    function defaultConfiguration() {\n      return _.defaults({}, {\n        transform: function (doc) {\n          return doc;\n        },\n        beforePublish: function (event, doc) {\n          return doc;\n        }\n      }, _Engine.prototype.defaultConfiguration.call(this));\n    }\n\n    return defaultConfiguration;\n  }();\n  /**\n   * Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n\n\n  _proto.onIndexCreate = function () {\n    function onIndexCreate(indexConfig) {\n      _Engine.prototype.onIndexCreate.call(this, indexConfig);\n\n      indexConfig.searchCollection = new SearchCollection(indexConfig, this);\n      indexConfig.mongoCollection = indexConfig.searchCollection._collection;\n    }\n\n    return onIndexCreate;\n  }();\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n\n\n  _proto.transformSearchDefinition = function () {\n    function transformSearchDefinition(searchDefinition, options) {\n      if (_.isString(searchDefinition)) {\n        var obj = {};\n\n        _.each(options.index.fields, function (field) {\n          obj[field] = searchDefinition;\n        });\n\n        searchDefinition = obj;\n      }\n\n      return searchDefinition;\n    }\n\n    return transformSearchDefinition;\n  }();\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   * @param indexOptions\n   */\n\n\n  _proto.checkSearchParam = function () {\n    function checkSearchParam(search, indexOptions) {\n      check(search, Match.OneOf(String, Object));\n\n      if (_.isObject(search)) {\n        _.each(search, function (val, field) {\n          check(val, String);\n\n          if (-1 === _.indexOf(indexOptions.allowedFields, field)) {\n            throw new Meteor.Error(\"Not allowed to search over field \\\"\" + field + \"\\\"\");\n          }\n        });\n      }\n    }\n\n    return checkSearchParam;\n  }();\n  /**\n   * Reactively search on the collection.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n\n\n  _proto.search = function () {\n    function search(searchDefinition, options) {\n      if (Meteor.isClient) {\n        return options.index.searchCollection.find(searchDefinition, options.search);\n      } else {\n        return this.getSearchCursor(this.transformSearchDefinition(searchDefinition, options), options);\n      }\n    }\n\n    return search;\n  }();\n\n  return ReactiveEngine;\n}(Engine);\n\nmodule.exportDefault(ReactiveEngine);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cursor.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/core/cursor.js                                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\n/**\n * A Cursor represents a pointer to the search results. Since it's specific\n * to EasySearch it can also be used to check for valid return values.\n *\n * @type {Cursor}\n */\nvar Cursor =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param {Mongo.Cursor} mongoCursor   Referenced mongo cursor\n   * @param {Number}       count         Count of all documents found\n   * @param {Boolean}      isReady       Cursor is ready\n   * @param {Object}       publishHandle Publish handle to stop if on client\n   *\n   * @constructor\n   *\n   */\n  function Cursor(mongoCursor, count) {\n    var isReady = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var publishHandle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    check(mongoCursor.fetch, Function);\n    check(count, Number);\n    check(isReady, Match.Optional(Boolean));\n    check(publishHandle, Match.OneOf(null, Object));\n    this._mongoCursor = mongoCursor;\n    this._count = count;\n    this._isReady = isReady;\n    this._publishHandle = publishHandle;\n  }\n  /**\n   * Fetch the search results.\n   *\n   * @returns {[Object]}\n   */\n\n\n  var _proto = Cursor.prototype;\n\n  _proto.fetch = function () {\n    function fetch() {\n      return this._mongoCursor.fetch();\n    }\n\n    return fetch;\n  }();\n  /**\n   * Stop the subscription handle associated with the cursor.\n   */\n\n\n  _proto.stop = function () {\n    function stop() {\n      if (this._publishHandle) {\n        return this._publishHandle.stop();\n      }\n    }\n\n    return stop;\n  }();\n  /**\n   * Return count of all documents found\n   *\n   * @returns {Number}\n   */\n\n\n  _proto.count = function () {\n    function count() {\n      return this._count;\n    }\n\n    return count;\n  }();\n  /**\n   * Return if the cursor is ready.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _proto.isReady = function () {\n    function isReady() {\n      return this._isReady;\n    }\n\n    return isReady;\n  }();\n  /**\n   * Return the raw mongo cursor.\n   *\n   * @returns {Mongo.Cursor}\n   */\n\n\n  (0, _createClass2.default)(Cursor, [{\n    key: \"mongoCursor\",\n    get: function () {\n      return this._mongoCursor;\n    }\n    /**\n     * Return a fake empty cursor, without data.\n     *\n     * @returns {Object}\n     */\n\n  }], [{\n    key: \"emptyCursor\",\n    get: function () {\n      return {\n        fetch: function () {\n          return [];\n        },\n        observe: function () {\n          return {\n            stop: function () {\n              return null;\n            }\n          };\n        },\n        stop: function () {}\n      };\n    }\n  }]);\n  return Cursor;\n}();\n\nmodule.exportDefault(Cursor);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"search-collection.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/core/search-collection.js                                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Cursor;\nmodule.watch(require(\"./cursor\"), {\n  \"default\": function (v) {\n    Cursor = v;\n  }\n}, 1);\nvar ReactiveEngine;\nmodule.watch(require(\"./reactive-engine\"), {\n  \"default\": function (v) {\n    ReactiveEngine = v;\n  }\n}, 2);\n\n/**\n * A search collection represents a reactive collection on the client,\n * which is used by the ReactiveEngine for searching.\n *\n * @type {SearchCollection}\n */\nvar SearchCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param {Object}         indexConfiguration Index configuration\n   * @param {ReactiveEngine} engine             Reactive Engine\n   *\n   * @constructor\n   */\n  function SearchCollection(indexConfiguration, engine) {\n    check(indexConfiguration, Object);\n    check(indexConfiguration.name, Match.OneOf(String, null));\n\n    if (!(engine instanceof ReactiveEngine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof ReactiveEngine');\n    }\n\n    this._indexConfiguration = indexConfiguration;\n    this._name = indexConfiguration.name + \"/easySearch\";\n    this._engine = engine;\n\n    if (Meteor.isClient) {\n      this._collection = new Mongo.Collection(this._name);\n    } else if (Meteor.isServer) {\n      this._setUpPublication();\n    }\n  }\n  /**\n   * Get name\n   *\n   * @returns {String}\n   */\n\n\n  var _proto = SearchCollection.prototype;\n\n  /**\n   * Find documents on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  _proto.find = function () {\n    function find(searchDefinition, options) {\n      if (!Meteor.isClient) {\n        throw new Error('find can only be used on client');\n      }\n\n      var publishHandle = Meteor.subscribe(this.name, searchDefinition, options);\n\n      var count = this._getCount(searchDefinition);\n\n      var mongoCursor = this._getMongoCursor(searchDefinition, options);\n\n      if (!_.isNumber(count)) {\n        return new Cursor(mongoCursor, 0, false);\n      }\n\n      return new Cursor(mongoCursor, count, true, publishHandle);\n    }\n\n    return find;\n  }();\n  /**\n   * Get the count of the cursor.\n   *\n   * @params {Object} searchDefinition Search definition\n   *\n   * @returns {Cursor.count}\n   *\n   * @private\n   */\n\n\n  _proto._getCount = function () {\n    function _getCount(searchDefinition) {\n      var countDoc = this._collection.findOne('searchCount' + JSON.stringify(searchDefinition));\n\n      if (countDoc) {\n        return countDoc.count;\n      }\n    }\n\n    return _getCount;\n  }();\n  /**\n   * Get the mongo cursor on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Search options\n   *\n   * @returns {Cursor}\n   * @private\n   */\n\n\n  _proto._getMongoCursor = function () {\n    function _getMongoCursor(searchDefinition, options) {\n      var _this = this;\n\n      var clientSort = this.engine.callConfigMethod('clientSort', searchDefinition, options);\n      return this._collection.find({\n        __searchDefinition: JSON.stringify(searchDefinition),\n        __searchOptions: JSON.stringify(options.props)\n      }, {\n        transform: function (doc) {\n          delete doc.__searchDefinition;\n          delete doc.__searchOptions;\n          delete doc.__sortPosition;\n          doc = _this.engine.config.transform(doc);\n          return doc;\n        },\n        sort: clientSort ? clientSort : ['__sortPosition']\n      });\n    }\n\n    return _getMongoCursor;\n  }();\n  /**\n   * Return a unique document id for publication.\n   *\n   * @param {Document} doc\n   *\n   * @returns string\n   */\n\n\n  _proto.generateId = function () {\n    function generateId(doc) {\n      return doc._id + doc.__searchDefinition + doc.__searchOptions;\n    }\n\n    return generateId;\n  }();\n  /**\n   * Add custom fields to the given document\n   *\n   * @param {Document} doc\n   * @param {Object}   data\n   * @returns {*}\n   */\n\n\n  _proto.addCustomFields = function () {\n    function addCustomFields(doc, data) {\n      _.forEach(data, function (val, key) {\n        doc['__' + key] = val;\n      });\n\n      return doc;\n    }\n\n    return addCustomFields;\n  }();\n  /**\n   * Set up publication.\n   *\n   * @private\n   */\n\n\n  _proto._setUpPublication = function () {\n    function _setUpPublication() {\n      var collectionScope = this,\n          collectionName = this.name;\n      Meteor.publish(collectionName, function (searchDefinition, options) {\n        var _this2 = this;\n\n        check(searchDefinition, Match.OneOf(String, Object));\n        check(options, Object);\n        var definitionString = JSON.stringify(searchDefinition),\n            optionsString = JSON.stringify(options.props);\n        options.userId = this.userId;\n        options.publicationScope = this;\n\n        if (!collectionScope._indexConfiguration.permission(options)) {\n          throw new Meteor.Error('not-allowed', \"You're not allowed to search this index!\");\n        }\n\n        collectionScope.engine.checkSearchParam(searchDefinition, collectionScope._indexConfiguration);\n        var cursor = collectionScope.engine.search(searchDefinition, {\n          search: options,\n          index: collectionScope._indexConfiguration\n        });\n        var count = cursor.count();\n        this.added(collectionName, 'searchCount' + definitionString, {\n          count: count\n        });\n        var intervalID;\n\n        if (collectionScope._indexConfiguration.countUpdateIntervalMs) {\n          intervalID = Meteor.setInterval(function () {\n            return _this2.changed(collectionName, 'searchCount' + definitionString, {\n              count: cursor.mongoCursor.count && cursor.mongoCursor.count() || 0\n            });\n          }, collectionScope._indexConfiguration.countUpdateIntervalMs);\n        }\n\n        this.onStop(function () {\n          intervalID && Meteor.clearInterval(intervalID);\n          resultsHandle && resultsHandle.stop();\n        });\n        var observedDocs = [];\n\n        var updateDocWithCustomFields = function (doc, sortPosition) {\n          return collectionScope.addCustomFields(doc, {\n            originalId: doc._id,\n            sortPosition: sortPosition,\n            searchDefinition: definitionString,\n            searchOptions: optionsString\n          });\n        };\n\n        var resultsHandle = cursor.mongoCursor.observe({\n          addedAt: function (doc, atIndex, before) {\n            doc = collectionScope.engine.config.beforePublish('addedAt', doc, atIndex, before);\n            doc = updateDocWithCustomFields(doc, atIndex);\n\n            _this2.added(collectionName, collectionScope.generateId(doc), doc);\n            /*\n             * Reorder all observed docs to keep valid sorting. Here we adjust the\n             * sortPosition number field to give space for the newly added doc\n             */\n\n\n            if (observedDocs.map(function (d) {\n              return d.__sortPosition;\n            }).includes(atIndex)) {\n              observedDocs = observedDocs.map(function (doc, docIndex) {\n                if (doc.__sortPosition >= atIndex) {\n                  doc = collectionScope.addCustomFields(doc, {\n                    sortPosition: doc.__sortPosition + 1\n                  }); // do not throw changed event on last doc as it will be removed from cursor\n\n                  if (docIndex < observedDocs.length) {\n                    _this2.changed(collectionName, collectionScope.generateId(doc), doc);\n                  }\n                }\n\n                return doc;\n              });\n            }\n\n            observedDocs = (0, _toConsumableArray2.default)(observedDocs).concat([doc]);\n          },\n          changedAt: function (doc, oldDoc, atIndex) {\n            doc = collectionScope.engine.config.beforePublish('changedAt', doc, oldDoc, atIndex);\n            doc = collectionScope.addCustomFields(doc, {\n              searchDefinition: definitionString,\n              searchOptions: optionsString,\n              sortPosition: atIndex,\n              originalId: doc._id\n            });\n\n            _this2.changed(collectionName, collectionScope.generateId(doc), doc);\n          },\n          movedTo: function (doc, fromIndex, toIndex, before) {\n            doc = collectionScope.engine.config.beforePublish('movedTo', doc, fromIndex, toIndex, before);\n            doc = updateDocWithCustomFields(doc, toIndex);\n\n            var beforeDoc = collectionScope._indexConfiguration.collection.findOne(before);\n\n            if (beforeDoc) {\n              beforeDoc = collectionScope.addCustomFields(beforeDoc, {\n                searchDefinition: definitionString,\n                searchOptions: optionsString,\n                sortPosition: fromIndex\n              });\n\n              _this2.changed(collectionName, collectionScope.generateId(beforeDoc), beforeDoc);\n            }\n\n            _this2.changed(collectionName, collectionScope.generateId(doc), doc);\n          },\n          removedAt: function (doc, atIndex) {\n            doc = collectionScope.engine.config.beforePublish('removedAt', doc, atIndex);\n            doc = collectionScope.addCustomFields(doc, {\n              searchDefinition: definitionString,\n              searchOptions: optionsString\n            });\n\n            _this2.removed(collectionName, collectionScope.generateId(doc));\n            /*\n             * Adjust sort position for all docs after the removed doc and\n             * remove the doc from the observed docs array\n             */\n\n\n            observedDocs = observedDocs.map(function (doc) {\n              if (doc.__sortPosition > atIndex) {\n                doc.__sortPosition -= 1;\n              }\n\n              return doc;\n            }).filter(function (d) {\n              return collectionScope.generateId(d) !== collectionScope.generateId(doc);\n            });\n          }\n        });\n        this.onStop(function () {\n          resultsHandle.stop();\n        });\n        this.ready();\n      });\n    }\n\n    return _setUpPublication;\n  }();\n\n  (0, _createClass2.default)(SearchCollection, [{\n    key: \"name\",\n    get: function () {\n      return this._name;\n    }\n    /**\n     * Get engine\n     *\n     * @returns {ReactiveEngine}\n     */\n\n  }, {\n    key: \"engine\",\n    get: function () {\n      return this._engine;\n    }\n  }]);\n  return SearchCollection;\n}();\n\nmodule.exportDefault(SearchCollection);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"engines\":{\"mongo-db.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/engines/mongo-db.js                                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar Cursor;\nmodule.watch(require(\"../core/cursor\"), {\n  \"default\": function (v) {\n    Cursor = v;\n  }\n}, 0);\nvar ReactiveEngine;\nmodule.watch(require(\"../core/reactive-engine\"), {\n  \"default\": function (v) {\n    ReactiveEngine = v;\n  }\n}, 1);\n\n/**\n * The MongoDBEngine lets you search the index on the server side with MongoDB. Subscriptions and publications\n * are handled within the Engine.\n *\n * @type {MongoDBEngine}\n */\nvar MongoDBEngine =\n/*#__PURE__*/\nfunction (_ReactiveEngine) {\n  (0, _inheritsLoose2.default)(MongoDBEngine, _ReactiveEngine);\n\n  function MongoDBEngine() {\n    return _ReactiveEngine.apply(this, arguments) || this;\n  }\n\n  var _proto = MongoDBEngine.prototype;\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  _proto.defaultConfiguration = function () {\n    function defaultConfiguration() {\n      return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), _ReactiveEngine.prototype.defaultConfiguration.call(this));\n    }\n\n    return defaultConfiguration;\n  }();\n  /**\n   * Default mongo configuration, used in constructor and MinimongoEngine to get the configuration.\n   *\n   * @param {Object} engineScope Scope of the engine\n   *\n   * @returns {Object}\n   */\n\n\n  MongoDBEngine.defaultMongoConfiguration = function () {\n    function defaultMongoConfiguration(engineScope) {\n      return {\n        aggregation: '$or',\n        selector: function (searchObject, options, aggregation) {\n          var selector = {};\n          selector[aggregation] = [];\n\n          _.each(searchObject, function (searchString, field) {\n            var fieldSelector = engineScope.callConfigMethod('selectorPerField', field, searchString, options);\n\n            if (fieldSelector) {\n              selector[aggregation].push(fieldSelector);\n            }\n          });\n\n          return selector;\n        },\n        selectorPerField: function (field, searchString) {\n          var selector = {};\n          searchString = searchString.replace(/(\\W{1})/g, '\\\\$1');\n          selector[field] = {\n            '$regex': \".*\" + searchString + \".*\",\n            '$options': 'i'\n          };\n          return selector;\n        },\n        sort: function (searchObject, options) {\n          return options.index.fields;\n        }\n      };\n    }\n\n    return defaultMongoConfiguration;\n  }();\n  /**\n   * Return the find options for the mongo find query.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n\n\n  _proto.getFindOptions = function () {\n    function getFindOptions(searchDefinition, options) {\n      return {\n        skip: options.search.skip,\n        limit: options.search.limit,\n        disableOplog: this.config.disableOplog,\n        pollingIntervalMs: this.config.pollingIntervalMs,\n        pollingThrottleMs: this.config.pollingThrottleMs,\n        sort: this.callConfigMethod('sort', searchDefinition, options),\n        fields: this.callConfigMethod('fields', searchDefinition, options)\n      };\n    }\n\n    return getFindOptions;\n  }();\n  /**\n   * Return the reactive search cursor.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n\n\n  _proto.getSearchCursor = function () {\n    function getSearchCursor(searchDefinition, options) {\n      var selector = this.callConfigMethod('selector', searchDefinition, options, this.config.aggregation),\n          findOptions = this.getFindOptions(searchDefinition, options),\n          collection = options.index.collection;\n      check(options, Object);\n      check(selector, Object);\n      check(findOptions, Object);\n      return new Cursor(collection.find(selector, findOptions), collection.find(selector).count());\n    }\n\n    return getSearchCursor;\n  }();\n\n  return MongoDBEngine;\n}(ReactiveEngine);\n\nmodule.exportDefault(MongoDBEngine);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"minimongo.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/engines/minimongo.js                                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar Engine;\nmodule.watch(require(\"../core/engine\"), {\n  \"default\": function (v) {\n    Engine = v;\n  }\n}, 0);\nvar ReactiveEngine;\nmodule.watch(require(\"../core/reactive-engine\"), {\n  \"default\": function (v) {\n    ReactiveEngine = v;\n  }\n}, 1);\nvar MongoDBEngine;\nmodule.watch(require(\"./mongo-db\"), {\n  \"default\": function (v) {\n    MongoDBEngine = v;\n  }\n}, 2);\n\n/**\n * The MinimongEngine lets you search the index on the client-side.\n *\n * @type {MinimongoEngine}\n */\nvar MinimongoEngine =\n/*#__PURE__*/\nfunction (_Engine) {\n  (0, _inheritsLoose2.default)(MinimongoEngine, _Engine);\n\n  function MinimongoEngine() {\n    return _Engine.apply(this, arguments) || this;\n  }\n\n  var _proto = MinimongoEngine.prototype;\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  _proto.defaultConfiguration = function () {\n    function defaultConfiguration() {\n      return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), _Engine.prototype.defaultConfiguration.call(this));\n    }\n\n    return defaultConfiguration;\n  }();\n  /**\n   * Search the index.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Object of options\n   *\n   * @returns {cursor}\n   */\n\n\n  _proto.search = function () {\n    function search(searchDefinition, options) {\n      if (!Meteor.isClient) {\n        throw new Meteor.Error('only-client', 'Minimongo can only be used on the client');\n      }\n\n      searchDefinition = this.transformSearchDefinition(searchDefinition, options); // check() calls are in getSearchCursor method\n\n      return MongoDBEngine.prototype.getSearchCursor.apply(this, [searchDefinition, options]);\n    }\n\n    return search;\n  }();\n\n  return MinimongoEngine;\n}(Engine);\n\nMinimongoEngine.prototype.checkSearchParam = ReactiveEngine.prototype.checkSearchParam;\nMinimongoEngine.prototype.transformSearchDefinition = ReactiveEngine.prototype.transformSearchDefinition;\n\nMinimongoEngine.prototype.getFindOptions = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var findOptions = MongoDBEngine.prototype.getFindOptions.apply(this, args);\n  findOptions.transform = this.config.transform;\n  return findOptions;\n};\n\nmodule.exportDefault(MinimongoEngine);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mongo-text-index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/engines/mongo-text-index.js                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar ReactiveEngine;\nmodule.watch(require(\"../core/reactive-engine\"), {\n  \"default\": function (v) {\n    ReactiveEngine = v;\n  }\n}, 0);\nvar MongoDBEngine;\nmodule.watch(require(\"./mongo-db\"), {\n  \"default\": function (v) {\n    MongoDBEngine = v;\n  }\n}, 1);\n\n/**\n * The MongoTextIndexEngine lets you search the index with Mongo text indexes.\n *\n * @type {MongoTextIndexEngine}\n */\nvar MongoTextIndexEngine =\n/*#__PURE__*/\nfunction (_ReactiveEngine) {\n  (0, _inheritsLoose2.default)(MongoTextIndexEngine, _ReactiveEngine);\n\n  function MongoTextIndexEngine() {\n    return _ReactiveEngine.apply(this, arguments) || this;\n  }\n\n  var _proto = MongoTextIndexEngine.prototype;\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  _proto.defaultConfiguration = function () {\n    function defaultConfiguration() {\n      var mongoConfiguration = MongoDBEngine.defaultMongoConfiguration(this);\n\n      mongoConfiguration.selector = function (searchString) {\n        if (searchString.trim()) {\n          return {\n            $text: {\n              $search: searchString\n            }\n          };\n        }\n\n        return {};\n      };\n\n      return _.defaults({}, mongoConfiguration, _ReactiveEngine.prototype.defaultConfiguration.call(this));\n    }\n\n    return defaultConfiguration;\n  }();\n  /**\n   * Setup the index on creation.\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n\n\n  _proto.onIndexCreate = function () {\n    function onIndexCreate(indexConfig) {\n      _ReactiveEngine.prototype.onIndexCreate.call(this, indexConfig);\n\n      if (Meteor.isServer) {\n        var textIndexesConfig = {};\n\n        _.each(indexConfig.fields, function (field) {\n          textIndexesConfig[field] = 'text';\n        });\n\n        if (indexConfig.weights) {\n          textIndexesConfig.weights = options.weights();\n        }\n\n        indexConfig.collection._ensureIndex(textIndexesConfig);\n      }\n    }\n\n    return onIndexCreate;\n  }();\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n\n\n  _proto.transformSearchDefinition = function () {\n    function transformSearchDefinition(searchDefinition, options) {\n      return searchDefinition;\n    }\n\n    return transformSearchDefinition;\n  }();\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n\n\n  _proto.checkSearchParam = function () {\n    function checkSearchParam(search) {\n      check(search, String);\n    }\n\n    return checkSearchParam;\n  }();\n\n  return MongoTextIndexEngine;\n}(ReactiveEngine); // Explicitely inherit getSearchCursor method functionality\n\n\nMongoTextIndexEngine.prototype.getSearchCursor = MongoDBEngine.prototype.getSearchCursor;\nMongoTextIndexEngine.prototype.getFindOptions = MongoDBEngine.prototype.getFindOptions;\nmodule.exportDefault(MongoTextIndexEngine);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"globals.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/globals.js                                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Index, Engine, ReactiveEngine, Cursor, MongoDBEngine, MinimongoEngine, MongoTextIndexEngine;\nmodule.watch(require(\"./main\"), {\n  Index: function (v) {\n    Index = v;\n  },\n  Engine: function (v) {\n    Engine = v;\n  },\n  ReactiveEngine: function (v) {\n    ReactiveEngine = v;\n  },\n  Cursor: function (v) {\n    Cursor = v;\n  },\n  MongoDBEngine: function (v) {\n    MongoDBEngine = v;\n  },\n  MinimongoEngine: function (v) {\n    MinimongoEngine = v;\n  },\n  MongoTextIndexEngine: function (v) {\n    MongoTextIndexEngine = v;\n  }\n}, 0);\nEasySearch = {\n  // Core\n  Index: Index,\n  Engine: Engine,\n  ReactiveEngine: ReactiveEngine,\n  Cursor: Cursor,\n  // Engines\n  MongoDB: MongoDBEngine,\n  Minimongo: MinimongoEngine,\n  MongoTextIndex: MongoTextIndexEngine\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/easysearch_core/lib/main.js                                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  Index: function () {\n    return Index;\n  },\n  Engine: function () {\n    return Engine;\n  },\n  ReactiveEngine: function () {\n    return ReactiveEngine;\n  },\n  Cursor: function () {\n    return Cursor;\n  },\n  MongoDBEngine: function () {\n    return MongoDBEngine;\n  },\n  MinimongoEngine: function () {\n    return MinimongoEngine;\n  },\n  MongoTextIndexEngine: function () {\n    return MongoTextIndexEngine;\n  }\n});\nvar Index;\nmodule.watch(require(\"./core/index\"), {\n  \"default\": function (v) {\n    Index = v;\n  }\n}, 0);\nvar Engine;\nmodule.watch(require(\"./core/engine\"), {\n  \"default\": function (v) {\n    Engine = v;\n  }\n}, 1);\nvar ReactiveEngine;\nmodule.watch(require(\"./core/reactive-engine\"), {\n  \"default\": function (v) {\n    ReactiveEngine = v;\n  }\n}, 2);\nvar Cursor;\nmodule.watch(require(\"./core/cursor\"), {\n  \"default\": function (v) {\n    Cursor = v;\n  }\n}, 3);\nvar MongoDBEngine;\nmodule.watch(require(\"./engines/mongo-db\"), {\n  \"default\": function (v) {\n    MongoDBEngine = v;\n  }\n}, 4);\nvar MinimongoEngine;\nmodule.watch(require(\"./engines/minimongo\"), {\n  \"default\": function (v) {\n    MinimongoEngine = v;\n  }\n}, 5);\nvar MongoTextIndexEngine;\nmodule.watch(require(\"./engines/mongo-text-index\"), {\n  \"default\": function (v) {\n    MongoTextIndexEngine = v;\n  }\n}, 6);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nrequire(\"/node_modules/meteor/easysearch:core/lib/core/index.js\");\nrequire(\"/node_modules/meteor/easysearch:core/lib/core/engine.js\");\nrequire(\"/node_modules/meteor/easysearch:core/lib/core/reactive-engine.js\");\nrequire(\"/node_modules/meteor/easysearch:core/lib/core/cursor.js\");\nrequire(\"/node_modules/meteor/easysearch:core/lib/core/search-collection.js\");\nrequire(\"/node_modules/meteor/easysearch:core/lib/engines/mongo-db.js\");\nrequire(\"/node_modules/meteor/easysearch:core/lib/engines/minimongo.js\");\nrequire(\"/node_modules/meteor/easysearch:core/lib/engines/mongo-text-index.js\");\nrequire(\"/node_modules/meteor/easysearch:core/lib/globals.js\");\nvar exports = require(\"/node_modules/meteor/easysearch:core/lib/main.js\");\n\n/* Exports */\nPackage._define(\"easysearch:core\", exports, {\n  EasySearch: EasySearch\n});\n\n})();\n","servePath":"/packages/easysearch_core.js","sourceMap":{"version":3,"sources":["packages/easysearch:core/lib/core/index.js","packages/easysearch:core/lib/core/engine.js","packages/easysearch:core/lib/core/reactive-engine.js","packages/easysearch:core/lib/core/cursor.js","packages/easysearch:core/lib/core/search-collection.js","packages/easysearch:core/lib/engines/mongo-db.js","packages/easysearch:core/lib/engines/minimongo.js","packages/easysearch:core/lib/engines/mongo-text-index.js","packages/easysearch:core/lib/globals.js","packages/easysearch:core/lib/main.js"],"names":["Mongo","module","watch","require","v","Engine","Index","config","check","Object","fields","String","ignoreCollectionCheck","collection","Collection","engine","Meteor","Error","name","_name","toLowerCase","_","extend","defaultConfiguration","defaultSearchOptions","defaults","limit","skip","props","onIndexCreate","search","searchDefinition","options","checkSearchParam","Match","Optional","Number","userId","OneOf","_getSearchOptions","index","permission","isServer","countUpdateIntervalMs","exportDefault","constructor","isFunction","callConfigMethod","methodName","func","args","apply","indexConfig","allowedFields","SearchCollection","ReactiveEngine","getSearchCursor","transform","doc","beforePublish","event","searchCollection","mongoCollection","_collection","transformSearchDefinition","isString","obj","each","field","indexOptions","isObject","val","indexOf","isClient","find","Cursor","mongoCursor","count","isReady","publishHandle","fetch","Function","Boolean","_mongoCursor","_count","_isReady","_publishHandle","stop","observe","indexConfiguration","_indexConfiguration","_engine","_setUpPublication","subscribe","_getCount","_getMongoCursor","isNumber","countDoc","findOne","JSON","stringify","clientSort","__searchDefinition","__searchOptions","__sortPosition","sort","generateId","_id","addCustomFields","data","forEach","key","collectionScope","collectionName","publish","definitionString","optionsString","publicationScope","cursor","added","intervalID","setInterval","changed","onStop","clearInterval","resultsHandle","observedDocs","updateDocWithCustomFields","sortPosition","originalId","searchOptions","addedAt","atIndex","before","map","d","includes","docIndex","length","changedAt","oldDoc","movedTo","fromIndex","toIndex","beforeDoc","removedAt","removed","filter","ready","MongoDBEngine","defaultMongoConfiguration","engineScope","aggregation","selector","searchObject","searchString","fieldSelector","push","selectorPerField","replace","getFindOptions","disableOplog","pollingIntervalMs","pollingThrottleMs","findOptions","MinimongoEngine","prototype","MongoTextIndexEngine","mongoConfiguration","trim","$text","$search","textIndexesConfig","weights","_ensureIndex","EasySearch","MongoDB","Minimongo","MongoTextIndex","export"],"mappings":"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","file":"/packages/easysearch_core.js","sourcesContent":["import { Mongo } from 'meteor/mongo'\nimport Engine from './engine'\n\n/**\n * An Index represents the main entry point for searching with EasySearch. It relies on\n * the given engine to have the search functionality and defines the data that should be searchable.\n *\n * @type {Index}\n */\nclass Index {\n  /**\n   * Constructor\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    check(config, Object);\n    check(config.fields, [String]);\n    if(!config.ignoreCollectionCheck) check(config.collection, Mongo.Collection);\n\n    if (!(config.engine instanceof Engine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof Engine');\n    }\n\n    if (!config.name)\n      config.name = (config.collection._name || '').toLowerCase();\n\n    this.config = _.extend(Index.defaultConfiguration, config);\n    this.defaultSearchOptions = _.defaults(\n      {},\n      this.config.defaultSearchOptions,\n      { limit: 10, skip: 0, props: {} },\n    );\n\n    // Engine specific code on index creation\n    config.engine.onIndexCreate(this.config);\n  }\n\n  /**\n   * Default configuration for an index.\n   *\n   * @returns {Object}\n   */\n  static get defaultConfiguration() {\n    return {\n      permission: () => true,\n      defaultSearchOptions: {},\n      countUpdateIntervalMs: 2000,\n    };\n  }\n\n  /**\n   * Search the index.\n   *\n   * @param {Object|String} searchDefinition Search definition\n   * @param {Object}        options          Options\n   *\n   * @returns {Cursor}\n   */\n  search(searchDefinition, options = {}) {\n    this.config.engine.checkSearchParam(searchDefinition, this.config);\n\n    check(options, {\n      limit: Match.Optional(Number),\n      skip: Match.Optional(Number),\n      props: Match.Optional(Object),\n      userId: Match.Optional(Match.OneOf(String, null)),\n    });\n\n    options = {\n      search: this._getSearchOptions(options),\n      index: this.config,\n    };\n\n    if (!this.config.permission(options.search)) {\n      throw new Meteor.Error('not-allowed', \"Not allowed to search this index!\");\n    }\n\n    return this.config.engine.search(searchDefinition, options);\n  }\n\n  /**\n   * Returns the search options based on the given options.\n   *\n   * @param {Object} options Options to use\n   *\n   * @returns {Object}\n   */\n  _getSearchOptions(options) {\n    if (!Meteor.isServer) {\n      delete options.userId;\n    }\n\n    if (typeof options.userId === \"undefined\" && Meteor.userId) {\n      options.userId = Meteor.userId();\n    }\n\n    return _.defaults(options, this.defaultSearchOptions);\n  }\n}\n\nexport default Index;\n","/**\n * An Engine is the technology used for searching with EasySearch, with\n * customizable configuration to how it interacts with the data from the Index.\n *\n * @type {Engine}\n */\nclass Engine {\n  /**\n   * Constructor\n   *\n   * @param {Object} config configuration\n   *\n   * @constructor\n   */\n  constructor(config = {}) {\n    if (this.constructor === Engine) {\n      throw new Error('Cannot initialize instance of Engine');\n    }\n\n    if (!_.isFunction(this.search)) {\n      throw new Error('Engine needs to implement search method');\n    }\n\n    this.config = _.defaults({}, config, this.defaultConfiguration());\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return {};\n  }\n\n  /**\n   * Call a configuration method with the engine scope.\n   *\n   * @param {String} methodName Method name\n   * @param {Object} args       Arguments for the method\n   *\n   * @returns {*}\n   */\n  callConfigMethod(methodName, ...args) {\n    check(methodName, String);\n\n    let func = this.config[methodName];\n\n    if (func) {\n      return func.apply(this, args);\n    }\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n  checkSearchParam(search) {\n    check(search, String);\n  }\n\n  /**\n   *Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuraction\n   */\n  onIndexCreate(indexConfig) {\n    if (!indexConfig.allowedFields) {\n      indexConfig.allowedFields = indexConfig.fields;\n    }\n  }\n}\n\nexport default Engine;\n","import SearchCollection from './search-collection'\nimport Engine from './engine'\n\n/**\n * A ReactiveEngine handles the reactive logic, such as subscribing\n * and publishing documents into a self contained collection.\n *\n * @type {ReactiveEngine}\n */\nclass ReactiveEngine extends Engine {\n  /**\n   * Constructor.\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    super(config);\n\n    if (this === this.constructor) {\n      throw new Error('Cannot initialize instance of ReactiveEngine');\n    }\n\n    if (!_.isFunction(this.getSearchCursor)) {\n      throw new Error('Reactive engine needs to implement getSearchCursor method');\n    }\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, {\n      transform: (doc) => doc,\n      beforePublish: (event, doc) => doc\n    }, super.defaultConfiguration());\n  }\n\n  /**\n   * Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n  onIndexCreate(indexConfig) {\n    super.onIndexCreate(indexConfig);\n    indexConfig.searchCollection = new SearchCollection(indexConfig, this);\n    indexConfig.mongoCollection = indexConfig.searchCollection._collection;\n  }\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n  transformSearchDefinition(searchDefinition, options) {\n    if (_.isString(searchDefinition)) {\n      let obj = {};\n\n      _.each(options.index.fields, function (field) {\n        obj[field] = searchDefinition;\n      });\n\n      searchDefinition = obj;\n    }\n\n    return searchDefinition;\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   * @param indexOptions\n   */\n  checkSearchParam(search, indexOptions) {\n    check(search, Match.OneOf(String, Object));\n\n    if (_.isObject(search)) {\n      _.each(search, function (val, field) {\n        check(val, String);\n\n        if (-1 === _.indexOf(indexOptions.allowedFields, field)) {\n          throw new Meteor.Error(`Not allowed to search over field \"${field}\"`);\n        }\n      });\n    }\n  }\n\n  /**\n   * Reactively search on the collection.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  search(searchDefinition, options) {\n    if (Meteor.isClient) {\n      return options.index.searchCollection.find(searchDefinition, options.search);\n    } else {\n      return this.getSearchCursor(\n        this.transformSearchDefinition(searchDefinition, options),\n        options\n      );\n    }\n  }\n}\n\nexport default ReactiveEngine;\n","/**\n * A Cursor represents a pointer to the search results. Since it's specific\n * to EasySearch it can also be used to check for valid return values.\n *\n * @type {Cursor}\n */\nclass Cursor {\n  /**\n   * Constructor\n   *\n   * @param {Mongo.Cursor} mongoCursor   Referenced mongo cursor\n   * @param {Number}       count         Count of all documents found\n   * @param {Boolean}      isReady       Cursor is ready\n   * @param {Object}       publishHandle Publish handle to stop if on client\n   *\n   * @constructor\n   *\n   */\n  constructor(mongoCursor, count, isReady = true, publishHandle = null) {\n    check(mongoCursor.fetch, Function);\n    check(count, Number);\n    check(isReady, Match.Optional(Boolean));\n    check(publishHandle, Match.OneOf(null, Object));\n\n    this._mongoCursor = mongoCursor;\n    this._count = count;\n    this._isReady = isReady;\n    this._publishHandle = publishHandle;\n  }\n\n  /**\n   * Fetch the search results.\n   *\n   * @returns {[Object]}\n   */\n  fetch() {\n    return this._mongoCursor.fetch();\n  }\n\n /**\n  * Stop the subscription handle associated with the cursor.\n  */\n  stop() {\n    if (this._publishHandle) {\n      return this._publishHandle.stop();\n    }\n  }\n\n  /**\n   * Return count of all documents found\n   *\n   * @returns {Number}\n   */\n  count() {\n    return this._count;\n  }\n\n  /**\n   * Return if the cursor is ready.\n   *\n   * @returns {Boolean}\n   */\n  isReady() {\n    return this._isReady;\n  }\n\n  /**\n   * Return the raw mongo cursor.\n   *\n   * @returns {Mongo.Cursor}\n   */\n  get mongoCursor() {\n    return this._mongoCursor;\n  }\n\n  /**\n   * Return a fake empty cursor, without data.\n   *\n   * @returns {Object}\n   */\n  static get emptyCursor() {\n    return { fetch: () => [], observe: () => { return { stop: () => null }; }, stop: () => {} };\n  }\n}\n\nexport default Cursor;\n","import { Mongo } from 'meteor/mongo'\nimport Cursor from './cursor'\nimport ReactiveEngine from './reactive-engine'\n\n/**\n * A search collection represents a reactive collection on the client,\n * which is used by the ReactiveEngine for searching.\n *\n * @type {SearchCollection}\n */\nclass SearchCollection {\n  /**\n   * Constructor\n   *\n   * @param {Object}         indexConfiguration Index configuration\n   * @param {ReactiveEngine} engine             Reactive Engine\n   *\n   * @constructor\n   */\n  constructor(indexConfiguration, engine) {\n    check(indexConfiguration, Object);\n    check(indexConfiguration.name, Match.OneOf(String, null));\n\n    if (!(engine instanceof ReactiveEngine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof ReactiveEngine');\n    }\n\n    this._indexConfiguration = indexConfiguration;\n    this._name = `${indexConfiguration.name}/easySearch`;\n    this._engine = engine;\n\n    if (Meteor.isClient) {\n      this._collection = new Mongo.Collection(this._name);\n    } else if (Meteor.isServer) {\n      this._setUpPublication();\n    }\n  }\n\n  /**\n   * Get name\n   *\n   * @returns {String}\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * Get engine\n   *\n   * @returns {ReactiveEngine}\n   */\n  get engine() {\n    return this._engine;\n  }\n\n  /**\n   * Find documents on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  find(searchDefinition, options) {\n    if (!Meteor.isClient) {\n      throw new Error('find can only be used on client');\n    }\n\n    let publishHandle = Meteor.subscribe(this.name, searchDefinition, options);\n\n    let count = this._getCount(searchDefinition);\n    let mongoCursor = this._getMongoCursor(searchDefinition, options);\n\n    if (!_.isNumber(count)) {\n      return new Cursor(mongoCursor, 0, false);\n    }\n\n    return new Cursor(mongoCursor, count, true, publishHandle);\n  }\n\n  /**\n   * Get the count of the cursor.\n   *\n   * @params {Object} searchDefinition Search definition\n   *\n   * @returns {Cursor.count}\n   *\n   * @private\n   */\n  _getCount(searchDefinition) {\n    let countDoc = this._collection.findOne('searchCount' + JSON.stringify(searchDefinition));\n\n    if (countDoc) {\n      return countDoc.count;\n    }\n  }\n\n  /**\n   * Get the mongo cursor on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Search options\n   *\n   * @returns {Cursor}\n   * @private\n   */\n  _getMongoCursor(searchDefinition, options) {\n    const clientSort = this.engine.callConfigMethod('clientSort', searchDefinition, options);\n\n    return this._collection.find(\n      { __searchDefinition: JSON.stringify(searchDefinition), __searchOptions: JSON.stringify(options.props) },\n      {\n        transform: (doc) => {\n          delete doc.__searchDefinition;\n          delete doc.__searchOptions;\n          delete doc.__sortPosition;\n\n          doc = this.engine.config.transform(doc);\n\n          return doc;\n        },\n        sort: (clientSort ? clientSort : ['__sortPosition'])\n      }\n    );\n  }\n\n  /**\n   * Return a unique document id for publication.\n   *\n   * @param {Document} doc\n   *\n   * @returns string\n   */\n  generateId(doc) {\n    return doc._id + doc.__searchDefinition + doc.__searchOptions;\n  }\n\n  /**\n   * Add custom fields to the given document\n   *\n   * @param {Document} doc\n   * @param {Object}   data\n   * @returns {*}\n   */\n  addCustomFields(doc, data) {\n    _.forEach(data, function (val, key) {\n      doc['__' + key] = val;\n    });\n\n    return doc;\n  }\n\n  /**\n   * Set up publication.\n   *\n   * @private\n   */\n  _setUpPublication() {\n    var collectionScope = this,\n      collectionName = this.name;\n\n    Meteor.publish(collectionName, function (searchDefinition, options) {\n      check(searchDefinition, Match.OneOf(String, Object));\n      check(options, Object);\n\n      let definitionString = JSON.stringify(searchDefinition),\n        optionsString = JSON.stringify(options.props);\n\n      options.userId = this.userId;\n      options.publicationScope = this;\n\n      if (!collectionScope._indexConfiguration.permission(options)) {\n        throw new Meteor.Error('not-allowed', \"You're not allowed to search this index!\");\n      }\n\n      collectionScope.engine.checkSearchParam(searchDefinition, collectionScope._indexConfiguration);\n\n      let cursor = collectionScope.engine.search(searchDefinition, {\n        search: options,\n        index: collectionScope._indexConfiguration\n      });\n\n      const count = cursor.count();\n\n      this.added(collectionName, 'searchCount' + definitionString, { count });\n\n      let intervalID;\n\n      if (collectionScope._indexConfiguration.countUpdateIntervalMs) {\n        intervalID = Meteor.setInterval(\n          () => this.changed(\n            collectionName,\n            'searchCount' + definitionString,\n            { count: cursor.mongoCursor.count && cursor.mongoCursor.count() || 0 }\n          ),\n          collectionScope._indexConfiguration.countUpdateIntervalMs\n        );\n      }\n\n      this.onStop(function () {\n        intervalID && Meteor.clearInterval(intervalID);\n        resultsHandle && resultsHandle.stop();\n      });\n\n      let observedDocs = [];\n\n      const updateDocWithCustomFields = (doc, sortPosition) => collectionScope\n        .addCustomFields(doc, {\n          originalId: doc._id,\n          sortPosition,\n          searchDefinition: definitionString,\n          searchOptions: optionsString,\n        });\n\n      let resultsHandle = cursor.mongoCursor.observe({\n        addedAt: (doc, atIndex, before) => {\n          doc = collectionScope.engine.config.beforePublish('addedAt', doc, atIndex, before);\n          doc = updateDocWithCustomFields(doc, atIndex);\n\n          this.added(collectionName, collectionScope.generateId(doc), doc);\n\n          /*\n           * Reorder all observed docs to keep valid sorting. Here we adjust the\n           * sortPosition number field to give space for the newly added doc\n           */\n          if (observedDocs.map(d => d.__sortPosition).includes(atIndex)) {\n            observedDocs = observedDocs.map((doc, docIndex) => {\n              if (doc.__sortPosition >= atIndex) {\n                doc = collectionScope.addCustomFields(doc, {\n                  sortPosition: doc.__sortPosition + 1,\n                });\n\n                // do not throw changed event on last doc as it will be removed from cursor\n                if (docIndex < observedDocs.length) {\n                  this.changed(\n                    collectionName,\n                    collectionScope.generateId(doc),\n                    doc\n                  );\n                }\n              }\n\n              return doc;\n            });\n          }\n\n          observedDocs = [...observedDocs , doc];\n        },\n        changedAt: (doc, oldDoc, atIndex) => {\n          doc = collectionScope.engine.config.beforePublish('changedAt', doc, oldDoc, atIndex);\n          doc = collectionScope.addCustomFields(doc, {\n            searchDefinition: definitionString,\n            searchOptions: optionsString,\n            sortPosition: atIndex,\n            originalId: doc._id\n          });\n\n          this.changed(collectionName, collectionScope.generateId(doc), doc);\n        },\n        movedTo: (doc, fromIndex, toIndex, before) => {\n          doc = collectionScope.engine.config.beforePublish('movedTo', doc, fromIndex, toIndex, before);\n          doc = updateDocWithCustomFields(doc, toIndex);\n\n          let beforeDoc = collectionScope._indexConfiguration.collection.findOne(before);\n\n          if (beforeDoc) {\n            beforeDoc = collectionScope.addCustomFields(beforeDoc, {\n              searchDefinition: definitionString,\n              searchOptions: optionsString,\n              sortPosition: fromIndex\n            });\n            this.changed(collectionName, collectionScope.generateId(beforeDoc), beforeDoc);\n          }\n\n          this.changed(collectionName, collectionScope.generateId(doc), doc);\n        },\n        removedAt: (doc, atIndex) => {\n          doc = collectionScope.engine.config.beforePublish('removedAt', doc, atIndex);\n          doc = collectionScope.addCustomFields(\n            doc,\n            {\n              searchDefinition: definitionString,\n              searchOptions: optionsString\n            });\n          this.removed(collectionName, collectionScope.generateId(doc));\n\n          /*\n           * Adjust sort position for all docs after the removed doc and\n           * remove the doc from the observed docs array\n           */\n          observedDocs = observedDocs.map(doc => {\n            if (doc.__sortPosition > atIndex) {\n              doc.__sortPosition -= 1;\n            }\n\n            return doc;\n          }).filter(\n            d => collectionScope.generateId(d) !== collectionScope.generateId(doc)\n          );\n        }\n      });\n\n      this.onStop(function () {\n        resultsHandle.stop();\n      });\n\n      this.ready();\n    });\n  }\n}\n\nexport default SearchCollection;\n","import Cursor from '../core/cursor';\nimport ReactiveEngine from '../core/reactive-engine';\n\n/**\n * The MongoDBEngine lets you search the index on the server side with MongoDB. Subscriptions and publications\n * are handled within the Engine.\n *\n * @type {MongoDBEngine}\n */\nclass MongoDBEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), super.defaultConfiguration());\n  }\n\n  /**\n   * Default mongo configuration, used in constructor and MinimongoEngine to get the configuration.\n   *\n   * @param {Object} engineScope Scope of the engine\n   *\n   * @returns {Object}\n   */\n  static defaultMongoConfiguration(engineScope) {\n    return {\n      aggregation: '$or',\n      selector(searchObject, options, aggregation) {\n        const selector = {};\n\n        selector[aggregation] = [];\n\n        _.each(searchObject, (searchString, field) => {\n          const fieldSelector = engineScope.callConfigMethod(\n            'selectorPerField', field, searchString, options\n          );\n\n          if (fieldSelector) {\n            selector[aggregation].push(fieldSelector);\n          }\n        });\n\n        return selector;\n      },\n      selectorPerField(field, searchString) {\n        const selector = {};\n\n        searchString = searchString.replace(/(\\W{1})/g, '\\\\$1');\n        selector[field] = { '$regex' : `.*${searchString}.*`, '$options' : 'i'};\n\n        return selector;\n      },\n      sort(searchObject, options) {\n        return options.index.fields;\n      }\n    };\n  }\n\n  /**\n   * Return the find options for the mongo find query.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getFindOptions(searchDefinition, options) {\n    return {\n      skip: options.search.skip,\n      limit: options.search.limit,\n      disableOplog: this.config.disableOplog,\n      pollingIntervalMs: this.config.pollingIntervalMs,\n      pollingThrottleMs: this.config.pollingThrottleMs,\n      sort: this.callConfigMethod('sort', searchDefinition, options),\n      fields: this.callConfigMethod('fields', searchDefinition, options)\n    };\n  }\n\n  /**\n   * Return the reactive search cursor.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getSearchCursor(searchDefinition, options) {\n    const selector = this.callConfigMethod(\n        'selector',\n        searchDefinition,\n        options,\n        this.config.aggregation\n      ),\n      findOptions = this.getFindOptions(searchDefinition, options),\n      collection = options.index.collection;\n\n    check(options, Object);\n    check(selector, Object);\n    check(findOptions, Object);\n\n    return new Cursor(\n      collection.find(selector, findOptions),\n      collection.find(selector).count()\n    );\n  }\n}\n\nexport default MongoDBEngine;\n","import Engine from '../core/engine';\nimport ReactiveEngine from '../core/reactive-engine';\nimport MongoDBEngine from './mongo-db';\n\n/**\n * The MinimongEngine lets you search the index on the client-side.\n *\n * @type {MinimongoEngine}\n */\nclass MinimongoEngine extends Engine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), super.defaultConfiguration());\n  }\n\n  /**\n   * Search the index.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Object of options\n   *\n   * @returns {cursor}\n   */\n  search(searchDefinition, options) {\n    if (!Meteor.isClient) {\n      throw new Meteor.Error('only-client', 'Minimongo can only be used on the client');\n    }\n\n    searchDefinition = this.transformSearchDefinition(searchDefinition, options);\n\n    // check() calls are in getSearchCursor method\n    return MongoDBEngine.prototype.getSearchCursor.apply(this, [searchDefinition, options]);\n  }\n}\n\nMinimongoEngine.prototype.checkSearchParam = ReactiveEngine.prototype.checkSearchParam;\nMinimongoEngine.prototype.transformSearchDefinition = ReactiveEngine.prototype.transformSearchDefinition;\n\nMinimongoEngine.prototype.getFindOptions = function (...args) {\n  let findOptions = MongoDBEngine.prototype.getFindOptions.apply(this, args);\n\n  findOptions.transform = this.config.transform;\n\n  return findOptions;\n};\n\nexport default MinimongoEngine;\n","import ReactiveEngine from '../core/reactive-engine';\nimport MongoDBEngine from './mongo-db';\n\n/**\n * The MongoTextIndexEngine lets you search the index with Mongo text indexes.\n *\n * @type {MongoTextIndexEngine}\n */\nclass MongoTextIndexEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    let mongoConfiguration = MongoDBEngine.defaultMongoConfiguration(this);\n\n    mongoConfiguration.selector = function (searchString) {\n      if (searchString.trim()) {\n        return { $text: { $search: searchString } };\n      }\n\n      return {};\n    };\n\n    return _.defaults({}, mongoConfiguration, super.defaultConfiguration());\n  }\n\n  /**\n   * Setup the index on creation.\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n  onIndexCreate(indexConfig) {\n    super.onIndexCreate(indexConfig);\n\n    if (Meteor.isServer) {\n      let textIndexesConfig = {};\n\n      _.each(indexConfig.fields, function (field) {\n        textIndexesConfig[field] = 'text';\n      });\n\n      if (indexConfig.weights) {\n        textIndexesConfig.weights = options.weights();\n      }\n\n      indexConfig.collection._ensureIndex(textIndexesConfig);\n    }\n  }\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n  transformSearchDefinition(searchDefinition, options) {\n    return searchDefinition;\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n  checkSearchParam(search) {\n    check(search, String);\n  }\n}\n\n// Explicitely inherit getSearchCursor method functionality\nMongoTextIndexEngine.prototype.getSearchCursor = MongoDBEngine.prototype.getSearchCursor;\nMongoTextIndexEngine.prototype.getFindOptions = MongoDBEngine.prototype.getFindOptions;\n\nexport default MongoTextIndexEngine;\n","import {\n  Index,\n  Engine,\n  ReactiveEngine,\n  Cursor,\n  MongoDBEngine,\n  MinimongoEngine,\n  MongoTextIndexEngine\n} from './main';\n\nEasySearch = {\n  // Core\n  Index,\n  Engine,\n  ReactiveEngine,\n  Cursor,\n  // Engines\n  MongoDB: MongoDBEngine,\n  Minimongo: MinimongoEngine,\n  MongoTextIndex: MongoTextIndexEngine\n};\n","import Index from './core/index';\nimport Engine from './core/engine';\nimport ReactiveEngine from './core/reactive-engine';\nimport Cursor from './core/cursor';\nimport MongoDBEngine from './engines/mongo-db';\nimport MinimongoEngine from './engines/minimongo';\nimport MongoTextIndexEngine from './engines/mongo-text-index';\n\nexport {\n  Index,\n  Engine,\n  ReactiveEngine,\n  Cursor,\n  MongoDBEngine,\n  MinimongoEngine,\n  MongoTextIndexEngine\n};\n"]}}]